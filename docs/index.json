{
  "README.html": {
    "href": "README.html",
    "title": "fsm-unity-framework | FSM Unity Framework",
    "keywords": "fsm-unity-framework"
  },
  "api/EditorWindow.FSMSystem.BehaviorScripts.BehaviorScript.html": {
    "href": "api/EditorWindow.FSMSystem.BehaviorScripts.BehaviorScript.html",
    "title": "Class BehaviorScript | FSM Unity Framework",
    "keywords": "Class BehaviorScript Namespace EditorWindow.FSMSystem.BehaviorScripts Assembly EditorWindow.dll Represents an abstract behavior script for managing state options. public abstract class BehaviorScript : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BehaviorScript Fields CurrentState protected FsmStates CurrentState Field Value FsmStates options public List<StateScript> options Field Value List<StateScript> selectedOptionIndex public int selectedOptionIndex Field Value int Methods GetVariables() Retrieves variables and their values from the behavior script. public virtual Dictionary<string, object> GetVariables() Returns Dictionary<string, object> A dictionary containing variable names and their values. SetVariableValue(string, object) Sets the value of a specified variable in the behavior script. public virtual void SetVariableValue(string variableName, object newValue) Parameters variableName string The name of the variable to set. newValue object The new value to assign to the variable."
  },
  "api/EditorWindow.FSMSystem.BehaviorScripts.chasingai.html": {
    "href": "api/EditorWindow.FSMSystem.BehaviorScripts.chasingai.html",
    "title": "Class chasingai | FSM Unity Framework",
    "keywords": "Class chasingai Namespace EditorWindow.FSMSystem.BehaviorScripts Assembly Assembly-CSharp.dll [Serializable] public class chasingai : BehaviorScript Inheritance object Object Component Behaviour MonoBehaviour BehaviorScript chasingai Inherited Members BehaviorScript.options BehaviorScript.selectedOptionIndex BehaviorScript.CurrentState BehaviorScript.GetVariables() BehaviorScript.SetVariableValue(string, object) Fields chase [Header(\"Chase\")] [SerializeField] public ChaseStateScript chase Field Value ChaseStateScript distance0 [Header(\"Distance 0\")] [SerializeField] public DistanceConditionScript distance0 Field Value DistanceConditionScript distance1 [Header(\"Distance 1\")] [SerializeField] public DistanceConditionScript distance1 Field Value DistanceConditionScript nextState [Header(\"NextState\")] [SerializeField] public NextStateConditionScript nextState Field Value NextStateConditionScript search [Header(\"Search\")] [SerializeField] public SearchStateScript search Field Value SearchStateScript Methods UpdateChaseState() public void UpdateChaseState() UpdateDieState() public void UpdateDieState() UpdateHitState() public void UpdateHitState() UpdateSearchState() public void UpdateSearchState()"
  },
  "api/EditorWindow.FSMSystem.BehaviorScripts.html": {
    "href": "api/EditorWindow.FSMSystem.BehaviorScripts.html",
    "title": "Namespace EditorWindow.FSMSystem.BehaviorScripts | FSM Unity Framework",
    "keywords": "Namespace EditorWindow.FSMSystem.BehaviorScripts Classes BehaviorScript Represents an abstract behavior script for managing state options."
  },
  "api/EditorWindow.FSMSystem.BehaviorScripts.meleeAttack.html": {
    "href": "api/EditorWindow.FSMSystem.BehaviorScripts.meleeAttack.html",
    "title": "Class meleeAttack | FSM Unity Framework",
    "keywords": "Class meleeAttack Namespace EditorWindow.FSMSystem.BehaviorScripts Assembly Assembly-CSharp.dll [Serializable] public class meleeAttack : BehaviorScript Inheritance object Object Component Behaviour MonoBehaviour BehaviorScript meleeAttack Inherited Members BehaviorScript.options BehaviorScript.selectedOptionIndex BehaviorScript.CurrentState BehaviorScript.GetVariables() BehaviorScript.SetVariableValue(string, object) Fields attack [Header(\"Attack\")] [SerializeField] public AttackStateScript attack Field Value AttackStateScript chase [Header(\"Chase\")] [SerializeField] public ChaseStateScript chase Field Value ChaseStateScript distance0 [Header(\"Distance 0\")] [SerializeField] public DistanceConditionScript distance0 Field Value DistanceConditionScript distance1 [Header(\"Distance 1\")] [SerializeField] public DistanceConditionScript distance1 Field Value DistanceConditionScript Methods UpdateAttackState() public void UpdateAttackState() UpdateChaseState() public void UpdateChaseState() UpdateDieState() public void UpdateDieState() UpdateHitState() public void UpdateHitState()"
  },
  "api/EditorWindow.FSMSystem.Data.Error.FsmErrorData.html": {
    "href": "api/EditorWindow.FSMSystem.Data.Error.FsmErrorData.html",
    "title": "Class FsmErrorData | FSM Unity Framework",
    "keywords": "Class FsmErrorData Namespace EditorWindow.FSMSystem.Data.Error Assembly EditorWindow.dll Represents data for FSM errors. public class FsmErrorData Inheritance object FsmErrorData Constructors FsmErrorData() Initializes a new instance of the FsmErrorData class. public FsmErrorData() Properties Color Gets the color associated with the FSM error. public Color Color { get; } Property Value Color"
  },
  "api/EditorWindow.FSMSystem.Data.Error.FsmNodeErrorData.html": {
    "href": "api/EditorWindow.FSMSystem.Data.Error.FsmNodeErrorData.html",
    "title": "Class FsmNodeErrorData | FSM Unity Framework",
    "keywords": "Class FsmNodeErrorData Namespace EditorWindow.FSMSystem.Data.Error Assembly EditorWindow.dll Represents error data associated with FSM nodes. public class FsmNodeErrorData Inheritance object FsmNodeErrorData Properties ErrorData Gets the error data associated with the FSM node error. public FsmErrorData ErrorData { get; } Property Value FsmErrorData Nodes Gets the list of FSM nodes associated with the error. public List<FsmNode> Nodes { get; } Property Value List<FsmNode>"
  },
  "api/EditorWindow.FSMSystem.Data.Error.html": {
    "href": "api/EditorWindow.FSMSystem.Data.Error.html",
    "title": "Namespace EditorWindow.FSMSystem.Data.Error | FSM Unity Framework",
    "keywords": "Namespace EditorWindow.FSMSystem.Data.Error Classes FsmErrorData Represents data for FSM errors. FsmNodeErrorData Represents error data associated with FSM nodes."
  },
  "api/EditorWindow.FSMSystem.Data.Save.FsmAnimatorSaveData.html": {
    "href": "api/EditorWindow.FSMSystem.Data.Save.FsmAnimatorSaveData.html",
    "title": "Class FsmAnimatorSaveData | FSM Unity Framework",
    "keywords": "Class FsmAnimatorSaveData Namespace EditorWindow.FSMSystem.Data.Save Assembly EditorWindow.dll Represents save data for FSM Animator parameters. [Serializable] public class FsmAnimatorSaveData Inheritance object FsmAnimatorSaveData Properties AnimationTrigger Gets or sets a value indicating whether the trigger for setting animations is enabled. public bool AnimationTrigger { get; set; } Property Value bool ParameterName Gets or sets the name of the parameter. public string ParameterName { get; set; } Property Value string ParameterType Gets or sets the type of the parameter. public string ParameterType { get; set; } Property Value string Value Gets or sets the value of the parameter. public string Value { get; set; } Property Value string Methods Initialize(bool, string, string, string) Initializes the save data with specified parameters. public void Initialize(bool triggerEnable, string parameterName, string parameterType, string value) Parameters triggerEnable bool Whether the trigger for setting animations is enabled. parameterName string The name of the parameter. parameterType string The type of the parameter. value string The value of the parameter."
  },
  "api/EditorWindow.FSMSystem.Data.Save.FsmConnectionSaveData.html": {
    "href": "api/EditorWindow.FSMSystem.Data.Save.FsmConnectionSaveData.html",
    "title": "Class FsmConnectionSaveData | FSM Unity Framework",
    "keywords": "Class FsmConnectionSaveData Namespace EditorWindow.FSMSystem.Data.Save Assembly EditorWindow.dll Represents save data for FSM connections. [Serializable] public class FsmConnectionSaveData Inheritance object FsmConnectionSaveData Properties NodeId Gets or sets the ID of the connected node. public string NodeId { get; set; } Property Value string Text Gets or sets the text associated with the connection. public string Text { get; set; } Property Value string"
  },
  "api/EditorWindow.FSMSystem.Data.Save.FsmGraphSaveData.html": {
    "href": "api/EditorWindow.FSMSystem.Data.Save.FsmGraphSaveData.html",
    "title": "Class FsmGraphSaveData | FSM Unity Framework",
    "keywords": "Class FsmGraphSaveData Namespace EditorWindow.FSMSystem.Data.Save Assembly EditorWindow.dll Represents save data for FSM graphs. public class FsmGraphSaveData : ScriptableObject Inheritance object Object ScriptableObject FsmGraphSaveData Properties FileName Gets or sets the name of the file associated with the graph. public string FileName { get; set; } Property Value string GameObject Gets or sets the name of the GameObject associated with the graph. public string GameObject { get; set; } Property Value string HitData Gets or sets the save data for hit events in the graph. public FsmHitSaveData HitData { get; set; } Property Value FsmHitSaveData InitialState Gets or sets the initial state of the graph. public string InitialState { get; set; } Property Value string Nodes Gets or sets the list of nodes in the graph. public List<FsmNodeSaveData> Nodes { get; set; } Property Value List<FsmNodeSaveData> OldNodeNames Gets or sets the list of old node names in the graph. public List<string> OldNodeNames { get; set; } Property Value List<string> Methods Initialize(string, string, FsmHitSaveData) Initializes the save data with specified parameters. public void Initialize(string fileName, string initialState, FsmHitSaveData hitSaveData) Parameters fileName string The name of the file associated with the graph. initialState string The initial state of the graph. hitSaveData FsmHitSaveData The save data for hit events in the graph."
  },
  "api/EditorWindow.FSMSystem.Data.Save.FsmHitNodeSaveData.html": {
    "href": "api/EditorWindow.FSMSystem.Data.Save.FsmHitNodeSaveData.html",
    "title": "Class FsmHitNodeSaveData | FSM Unity Framework",
    "keywords": "Class FsmHitNodeSaveData Namespace EditorWindow.FSMSystem.Data.Save Assembly EditorWindow.dll Represents save data for hit events in the nodes of the FSM graphs. [Serializable] public class FsmHitNodeSaveData Inheritance object FsmHitNodeSaveData Properties CanDie Gets or sets a value indicating whether the enemy can die. public bool CanDie { get; set; } Property Value bool CanGetHit Gets or sets a value indicating whether the enemy can get hit. public bool CanGetHit { get; set; } Property Value bool HasHitOverride Gets or sets a value indicating whether the hit node has the hit override option enabled. public bool HasHitOverride { get; set; } Property Value bool TimeToWait Gets or sets the time to wait for the enemy to be stunned. public float TimeToWait { get; set; } Property Value float Methods Initialize(bool, bool, float, bool) Initializes the hit save data with specified parameters. public void Initialize(bool hasHitOverride, bool canGetHit, float timeToWait, bool canDie) Parameters hasHitOverride bool Whether the hit node has the hit override option enabled. canGetHit bool Whether the enemy can get hit. timeToWait float The time to wait for the enemy to be stunned. canDie bool Whether the enemy can die."
  },
  "api/EditorWindow.FSMSystem.Data.Save.FsmHitSaveData.html": {
    "href": "api/EditorWindow.FSMSystem.Data.Save.FsmHitSaveData.html",
    "title": "Class FsmHitSaveData | FSM Unity Framework",
    "keywords": "Class FsmHitSaveData Namespace EditorWindow.FSMSystem.Data.Save Assembly EditorWindow.dll Represents save data for hit events in FSM graphs. [Serializable] public class FsmHitSaveData Inheritance object FsmHitSaveData Properties CanDie Gets or sets a value indicating whether the enemy can die. public bool CanDie { get; set; } Property Value bool HitEnable Gets or sets a value indicating whether the enemy can get hit. public bool HitEnable { get; set; } Property Value bool TimeToWait Gets or sets the time to wait for the enemy to be stunned. public float TimeToWait { get; set; } Property Value float Methods Initialize(bool, float, bool) Initializes the save data with specified parameters. public void Initialize(bool hitEnable, float timeToWait, bool canDie) Parameters hitEnable bool Whether the enemy can get hit. timeToWait float The time to wait for the enemy to be stunned. canDie bool Whether the enemy can die."
  },
  "api/EditorWindow.FSMSystem.Data.Save.FsmNodeSaveData.html": {
    "href": "api/EditorWindow.FSMSystem.Data.Save.FsmNodeSaveData.html",
    "title": "Class FsmNodeSaveData | FSM Unity Framework",
    "keywords": "Class FsmNodeSaveData Namespace EditorWindow.FSMSystem.Data.Save Assembly EditorWindow.dll [Serializable] public class FsmNodeSaveData Inheritance object FsmNodeSaveData Properties AnimatorSaveData Gets or sets the save data about the animation option selected associated with the node. public FsmAnimatorSaveData AnimatorSaveData { get; set; } Property Value FsmAnimatorSaveData Connections Gets or sets the list of connections associated with the node. public List<FsmConnectionSaveData> Connections { get; set; } Property Value List<FsmConnectionSaveData> DataObject Gets or sets the data object saved in a json associated with the node. public string DataObject { get; set; } Property Value string HitNodeSaveData Gets or sets the save data for hit override values associated with the node. public FsmHitNodeSaveData HitNodeSaveData { get; set; } Property Value FsmHitNodeSaveData Id Gets or sets the ID of the node. public string Id { get; set; } Property Value string Name Gets or sets the name of the node. public string Name { get; set; } Property Value string NodeType Gets or sets the type of the node. public FsmNodeType NodeType { get; set; } Property Value FsmNodeType Position Gets or sets the position of the node. public Vector2 Position { get; set; } Property Value Vector2"
  },
  "api/EditorWindow.FSMSystem.Data.Save.html": {
    "href": "api/EditorWindow.FSMSystem.Data.Save.html",
    "title": "Namespace EditorWindow.FSMSystem.Data.Save | FSM Unity Framework",
    "keywords": "Namespace EditorWindow.FSMSystem.Data.Save Classes FsmAnimatorSaveData Represents save data for FSM Animator parameters. FsmConnectionSaveData Represents save data for FSM connections. FsmGraphSaveData Represents save data for FSM graphs. FsmHitNodeSaveData Represents save data for hit events in the nodes of the FSM graphs. FsmHitSaveData Represents save data for hit events in FSM graphs. FsmNodeSaveData"
  },
  "api/EditorWindow.FSMSystem.Elements.FsmCustomConditionNode.html": {
    "href": "api/EditorWindow.FSMSystem.Elements.FsmCustomConditionNode.html",
    "title": "Class FsmCustomConditionNode | FSM Unity Framework",
    "keywords": "Class FsmCustomConditionNode Namespace EditorWindow.FSMSystem.Elements Assembly EditorWindow.dll Represents a custom condition node in an FSM graph, inheriting from FsmNode. With this node you are able to add and execute a function from any GameObject. public class FsmCustomConditionNode : FsmNode Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node FsmNode FsmCustomConditionNode Inherited Members FsmNode.Id FsmNode.StateName FsmNode.Connections FsmNode.NodeType FsmNode.StateScript FsmNode.DataObjects FsmNode.InputPort FsmNode.OutputPort FsmNode.HasAnimatorTrigger FsmNode.HasHitStateOverride FsmNode.BuildContextualMenu(ContextualMenuPopulateEvent) FsmNode.DisconnectAllPorts() FsmNode.SetErrorStyle(Color) FsmNode.ResetStyle() FsmNode.SetStateName(string) FsmNode.GetScriptableObject() FsmNode.UpdateNameStyle(string) FsmNode.SetPortColor(Color, Direction, string) FsmNode.ShowAnimatorParameterDropdown(Toggle) FsmNode.GetAnimatorSaveData() FsmNode.SetAnimatorSaveData(FsmAnimatorSaveData) FsmNode.ShowHitStateOverrideToggle(Toggle) FsmNode.GetHitNodeSaveData() FsmNode.SetHitNodeSaveData(FsmHitNodeSaveData) FsmNode.UpdateHitEnable(bool) Extension Methods FsmElementUtility.CreatePort(FsmNode, string, Orientation, Direction, Port.Capacity) FsmStyleUtility.AddClasses(VisualElement, params string[]) FsmStyleUtility.AddStyleSheets(VisualElement, params string[]) Methods Draw() Draws the node, adding ports and custom state attributes. public override void Draw() Initialize(string, FsmGraphView, Vector2) Initializes the FSM custom state node. public override void Initialize(string nodeName, FsmGraphView fsmGraphView, Vector2 vectorPos) Parameters nodeName string The name of the node. fsmGraphView FsmGraphView The graph view this node belongs to. vectorPos Vector2 The position of the node in the graph."
  },
  "api/EditorWindow.FSMSystem.Elements.FsmCustomStateNode.html": {
    "href": "api/EditorWindow.FSMSystem.Elements.FsmCustomStateNode.html",
    "title": "Class FsmCustomStateNode | FSM Unity Framework",
    "keywords": "Class FsmCustomStateNode Namespace EditorWindow.FSMSystem.Elements Assembly EditorWindow.dll Represents a custom state node in an FSM graph, inheriting from FsmNode. With this node you are able to add and execute a function from any GameObject. public class FsmCustomStateNode : FsmNode Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node FsmNode FsmCustomStateNode Inherited Members FsmNode.Id FsmNode.StateName FsmNode.Connections FsmNode.NodeType FsmNode.StateScript FsmNode.DataObjects FsmNode.InputPort FsmNode.OutputPort FsmNode.HasAnimatorTrigger FsmNode.HasHitStateOverride FsmNode.BuildContextualMenu(ContextualMenuPopulateEvent) FsmNode.DisconnectAllPorts() FsmNode.SetErrorStyle(Color) FsmNode.ResetStyle() FsmNode.SetStateName(string) FsmNode.GetScriptableObject() FsmNode.UpdateNameStyle(string) FsmNode.SetPortColor(Color, Direction, string) FsmNode.ShowAnimatorParameterDropdown(Toggle) FsmNode.GetAnimatorSaveData() FsmNode.SetAnimatorSaveData(FsmAnimatorSaveData) FsmNode.ShowHitStateOverrideToggle(Toggle) FsmNode.GetHitNodeSaveData() FsmNode.SetHitNodeSaveData(FsmHitNodeSaveData) FsmNode.UpdateHitEnable(bool) Extension Methods FsmElementUtility.CreatePort(FsmNode, string, Orientation, Direction, Port.Capacity) FsmStyleUtility.AddClasses(VisualElement, params string[]) FsmStyleUtility.AddStyleSheets(VisualElement, params string[]) Methods Draw() Draws the node, adding ports and custom state attributes. public override void Draw() Initialize(string, FsmGraphView, Vector2) Initializes the FSM custom state node. public override void Initialize(string nodeName, FsmGraphView fsmGraphView, Vector2 vectorPos) Parameters nodeName string The name of the node. fsmGraphView FsmGraphView The graph view this node belongs to. vectorPos Vector2 The position of the node in the graph."
  },
  "api/EditorWindow.FSMSystem.Elements.FsmDualTransitionNode.html": {
    "href": "api/EditorWindow.FSMSystem.Elements.FsmDualTransitionNode.html",
    "title": "Class FsmDualTransitionNode | FSM Unity Framework",
    "keywords": "Class FsmDualTransitionNode Namespace EditorWindow.FSMSystem.Elements Assembly EditorWindow.dll Represents a dual transition node in an FSM graph, inheriting from FsmNode. In this case, there are two possible transitions, one for true and one for false. public class FsmDualTransitionNode : FsmNode Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node FsmNode FsmDualTransitionNode Inherited Members FsmNode.Id FsmNode.StateName FsmNode.Connections FsmNode.NodeType FsmNode.StateScript FsmNode.DataObjects FsmNode.InputPort FsmNode.OutputPort FsmNode.HasAnimatorTrigger FsmNode.HasHitStateOverride FsmNode.BuildContextualMenu(ContextualMenuPopulateEvent) FsmNode.DisconnectAllPorts() FsmNode.SetErrorStyle(Color) FsmNode.ResetStyle() FsmNode.SetStateName(string) FsmNode.GetScriptableObject() FsmNode.UpdateNameStyle(string) FsmNode.SetPortColor(Color, Direction, string) FsmNode.ShowAnimatorParameterDropdown(Toggle) FsmNode.GetAnimatorSaveData() FsmNode.SetAnimatorSaveData(FsmAnimatorSaveData) FsmNode.ShowHitStateOverrideToggle(Toggle) FsmNode.GetHitNodeSaveData() FsmNode.SetHitNodeSaveData(FsmHitNodeSaveData) FsmNode.UpdateHitEnable(bool) Extension Methods FsmElementUtility.CreatePort(FsmNode, string, Orientation, Direction, Port.Capacity) FsmStyleUtility.AddClasses(VisualElement, params string[]) FsmStyleUtility.AddStyleSheets(VisualElement, params string[]) Methods Draw() Draws the node, adding ports and custom state attributes. public override void Draw() Initialize(string, FsmGraphView, Vector2) Initializes the FSM dual transition node. public override void Initialize(string nodeName, FsmGraphView fsmGraphView, Vector2 vectorPos) Parameters nodeName string The name of the node. fsmGraphView FsmGraphView vectorPos Vector2 The position of the node in the graph."
  },
  "api/EditorWindow.FSMSystem.Elements.FsmExtensionNode.html": {
    "href": "api/EditorWindow.FSMSystem.Elements.FsmExtensionNode.html",
    "title": "Class FsmExtensionNode | FSM Unity Framework",
    "keywords": "Class FsmExtensionNode Namespace EditorWindow.FSMSystem.Elements Assembly EditorWindow.dll Represents an FSM extension node, inheriting from FsmNode. This type of node is used to draw more comprehensive connections between states. public class FsmExtensionNode : FsmNode Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node FsmNode FsmExtensionNode Inherited Members FsmNode.Id FsmNode.StateName FsmNode.Connections FsmNode.NodeType FsmNode.StateScript FsmNode.DataObjects FsmNode.InputPort FsmNode.OutputPort FsmNode.HasAnimatorTrigger FsmNode.HasHitStateOverride FsmNode.BuildContextualMenu(ContextualMenuPopulateEvent) FsmNode.DisconnectAllPorts() FsmNode.SetErrorStyle(Color) FsmNode.ResetStyle() FsmNode.GetScriptableObject() FsmNode.UpdateNameStyle(string) FsmNode.SetPortColor(Color, Direction, string) FsmNode.ShowAnimatorParameterDropdown(Toggle) FsmNode.GetAnimatorSaveData() FsmNode.SetAnimatorSaveData(FsmAnimatorSaveData) FsmNode.ShowHitStateOverrideToggle(Toggle) FsmNode.GetHitNodeSaveData() FsmNode.SetHitNodeSaveData(FsmHitNodeSaveData) FsmNode.UpdateHitEnable(bool) Extension Methods FsmElementUtility.CreatePort(FsmNode, string, Orientation, Direction, Port.Capacity) FsmStyleUtility.AddClasses(VisualElement, params string[]) FsmStyleUtility.AddStyleSheets(VisualElement, params string[]) Methods Draw() Draws the node, adding the input and output ports and styling the containers. This draw does not inherit from the base class, as the extension node has a different layout. public override void Draw() Initialize(string, FsmGraphView, Vector2) Initializes the FSM extension node. public override void Initialize(string nodeName, FsmGraphView fsmGraphView, Vector2 vectorPos) Parameters nodeName string The name of the node. fsmGraphView FsmGraphView The graph view this node belongs to. vectorPos Vector2 The position of the node in the graph. SetStateName(string) Sets the name of the state. public override void SetStateName(string stateName) Parameters stateName string The new name of the state."
  },
  "api/EditorWindow.FSMSystem.Elements.FsmInitialNode.html": {
    "href": "api/EditorWindow.FSMSystem.Elements.FsmInitialNode.html",
    "title": "Class FsmInitialNode | FSM Unity Framework",
    "keywords": "Class FsmInitialNode Namespace EditorWindow.FSMSystem.Elements Assembly EditorWindow.dll Represents the initial node in an FSM graph, inheriting from FsmNode. Used to know the first state to execute in the FSM. public class FsmInitialNode : FsmNode Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node FsmNode FsmInitialNode Inherited Members FsmNode.Id FsmNode.StateName FsmNode.Connections FsmNode.NodeType FsmNode.StateScript FsmNode.DataObjects FsmNode.InputPort FsmNode.OutputPort FsmNode.HasAnimatorTrigger FsmNode.HasHitStateOverride FsmNode.BuildContextualMenu(ContextualMenuPopulateEvent) FsmNode.DisconnectAllPorts() FsmNode.SetErrorStyle(Color) FsmNode.ResetStyle() FsmNode.SetStateName(string) FsmNode.GetScriptableObject() FsmNode.UpdateNameStyle(string) FsmNode.SetPortColor(Color, Direction, string) FsmNode.ShowAnimatorParameterDropdown(Toggle) FsmNode.GetAnimatorSaveData() FsmNode.SetAnimatorSaveData(FsmAnimatorSaveData) FsmNode.ShowHitStateOverrideToggle(Toggle) FsmNode.GetHitNodeSaveData() FsmNode.SetHitNodeSaveData(FsmHitNodeSaveData) FsmNode.UpdateHitEnable(bool) Extension Methods FsmElementUtility.CreatePort(FsmNode, string, Orientation, Direction, Port.Capacity) FsmStyleUtility.AddClasses(VisualElement, params string[]) FsmStyleUtility.AddStyleSheets(VisualElement, params string[]) Methods Draw() Draws the node, adding a label for the state name and configuring output ports. public override void Draw() Initialize(string, FsmGraphView, Vector2) Initializes the FSM initial node. public override void Initialize(string nodeName, FsmGraphView fsmGraphView, Vector2 vectorPos) Parameters nodeName string The name of the node. fsmGraphView FsmGraphView The graph view this node belongs to. vectorPos Vector2 The position of the node in the graph."
  },
  "api/EditorWindow.FSMSystem.Elements.FsmNode.html": {
    "href": "api/EditorWindow.FSMSystem.Elements.FsmNode.html",
    "title": "Class FsmNode | FSM Unity Framework",
    "keywords": "Class FsmNode Namespace EditorWindow.FSMSystem.Elements Assembly EditorWindow.dll Represents the base class for all FSM node elements. public class FsmNode : Node Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node FsmNode Derived FsmCustomConditionNode FsmCustomStateNode FsmDualTransitionNode FsmExtensionNode FsmInitialNode FsmStateNode FsmTransitionNode FsmVariableNode Extension Methods FsmElementUtility.CreatePort(FsmNode, string, Orientation, Direction, Port.Capacity) FsmStyleUtility.AddClasses(VisualElement, params string[]) FsmStyleUtility.AddStyleSheets(VisualElement, params string[]) Fields DataObjects protected List<StateScriptData> DataObjects Field Value List<StateScriptData> HasAnimatorTrigger protected bool HasAnimatorTrigger Field Value bool HasHitStateOverride protected bool HasHitStateOverride Field Value bool InputPort protected Port InputPort Field Value Port OutputPort protected List<Port> OutputPort Field Value List<Port> Properties Connections Gets or sets the list of connections associated with the FSM node. public List<FsmConnectionSaveData> Connections { get; set; } Property Value List<FsmConnectionSaveData> Id Gets or sets the unique identifier of the FSM node. public string Id { get; set; } Property Value string NodeType Gets or sets the type of the FSM node. public FsmNodeType NodeType { get; set; } Property Value FsmNodeType StateName Gets or sets the name of the state associated with the FSM node. public string StateName { get; set; } Property Value string StateScript Gets or sets the script data associated with the behaviour of the FSM node. public StateScriptData StateScript { get; set; } Property Value StateScriptData Methods BuildContextualMenu(ContextualMenuPopulateEvent) Overrides the method to build a contextual menu for the FSM node. In this case, the menu will contain options to disconnect input and output ports. public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters evt ContextualMenuPopulateEvent DisconnectAllPorts() public void DisconnectAllPorts() Draw() Virtual method to draw the FSM node. This method will be overridden by the derived classes. Acts as a base node and the derived classes will implement their own logic. public virtual void Draw() GetAnimatorSaveData() Retrieves the saved animator data. public FsmAnimatorSaveData GetAnimatorSaveData() Returns FsmAnimatorSaveData The saved animator data. GetHitNodeSaveData() Gets the save data from the hit information. public FsmHitNodeSaveData GetHitNodeSaveData() Returns FsmHitNodeSaveData The hit node save data. GetScriptableObject() Retrieves the StateScriptData object associated with the current state. protected void GetScriptableObject() Initialize(string, FsmGraphView, Vector2) Initializes the FSM node with the provided name, FSM graph view, and position. public virtual void Initialize(string nodeName, FsmGraphView graphView, Vector2 vectorPos) Parameters nodeName string The name of the FSM node. graphView FsmGraphView The FSM graph view where the node will be placed. vectorPos Vector2 The position of the node within the FSM graph view. ResetStyle() Resets the style of the main container to its default color. public void ResetStyle() SetAnimatorSaveData(FsmAnimatorSaveData) Sets the animator save data. public void SetAnimatorSaveData(FsmAnimatorSaveData animatorSaveData) Parameters animatorSaveData FsmAnimatorSaveData The animator save data to set. SetErrorStyle(Color) Sets the error style of the main container. public void SetErrorStyle(Color color) Parameters color Color The color to set as the background color. SetHitNodeSaveData(FsmHitNodeSaveData) Sets the hit node save data. public void SetHitNodeSaveData(FsmHitNodeSaveData animatorSaveData) Parameters animatorSaveData FsmHitNodeSaveData The hit node save data to set. SetPortColor(Color, Direction, string) Sets the color of a port based on its direction (input or output). public void SetPortColor(Color color, Direction direction, string portName = \"\") Parameters color Color The color to set. direction Direction The direction of the port (input or output). portName string The name of the port. SetStateName(string) Sets the name of the state and updates the displayed state name field. public virtual void SetStateName(string stateName) Parameters stateName string The new name of the state. ShowAnimatorParameterDropdown(Toggle) Shows a dropdown menu for selecting an animator parameter and provides fields for configuring its value based on the parameter type. protected void ShowAnimatorParameterDropdown(Toggle toggle) Parameters toggle Toggle The toggle representing the state of showing the dropdown. ShowHitStateOverrideToggle(Toggle) If enabled adds the parameters to be able to override the hit values. protected void ShowHitStateOverrideToggle(Toggle toggle) Parameters toggle Toggle The toggle to show override hit parameters. UpdateHitEnable(bool) public virtual void UpdateHitEnable(bool canGetHit) Parameters canGetHit bool UpdateNameStyle(string) Updates the naming style of a string from camel case to a readable format with spaces between words. protected string UpdateNameStyle(string newName) Parameters newName string The string to be formatted. Returns string The formatted string."
  },
  "api/EditorWindow.FSMSystem.Elements.FsmStateNode.html": {
    "href": "api/EditorWindow.FSMSystem.Elements.FsmStateNode.html",
    "title": "Class FsmStateNode | FSM Unity Framework",
    "keywords": "Class FsmStateNode Namespace EditorWindow.FSMSystem.Elements Assembly EditorWindow.dll Represents a state node in an FSM graph, inheriting from FsmNode. public class FsmStateNode : FsmNode Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node FsmNode FsmStateNode Inherited Members FsmNode.Id FsmNode.StateName FsmNode.Connections FsmNode.NodeType FsmNode.StateScript FsmNode.DataObjects FsmNode.InputPort FsmNode.OutputPort FsmNode.HasAnimatorTrigger FsmNode.HasHitStateOverride FsmNode.BuildContextualMenu(ContextualMenuPopulateEvent) FsmNode.DisconnectAllPorts() FsmNode.SetErrorStyle(Color) FsmNode.ResetStyle() FsmNode.SetStateName(string) FsmNode.GetScriptableObject() FsmNode.UpdateNameStyle(string) FsmNode.SetPortColor(Color, Direction, string) FsmNode.ShowAnimatorParameterDropdown(Toggle) FsmNode.GetAnimatorSaveData() FsmNode.SetAnimatorSaveData(FsmAnimatorSaveData) FsmNode.ShowHitStateOverrideToggle(Toggle) FsmNode.GetHitNodeSaveData() FsmNode.SetHitNodeSaveData(FsmHitNodeSaveData) Extension Methods FsmElementUtility.CreatePort(FsmNode, string, Orientation, Direction, Port.Capacity) FsmStyleUtility.AddClasses(VisualElement, params string[]) FsmStyleUtility.AddStyleSheets(VisualElement, params string[]) Methods Draw() Draws the node, adding ports, toggles, and any state attributes. public override void Draw() Initialize(string, FsmGraphView, Vector2) Initializes the FSM state node. public override void Initialize(string nodeName, FsmGraphView graphView, Vector2 posVector2) Parameters nodeName string The name of the node. graphView FsmGraphView The graph view this node belongs to. posVector2 Vector2 The position of the node in the graph. UpdateHitEnable(bool) public override void UpdateHitEnable(bool value) Parameters value bool"
  },
  "api/EditorWindow.FSMSystem.Elements.FsmTransitionNode.html": {
    "href": "api/EditorWindow.FSMSystem.Elements.FsmTransitionNode.html",
    "title": "Class FsmTransitionNode | FSM Unity Framework",
    "keywords": "Class FsmTransitionNode Namespace EditorWindow.FSMSystem.Elements Assembly EditorWindow.dll Represents a transition node in an FSM graph, inheriting from FsmNode. public class FsmTransitionNode : FsmNode Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node FsmNode FsmTransitionNode Inherited Members FsmNode.Id FsmNode.StateName FsmNode.Connections FsmNode.NodeType FsmNode.StateScript FsmNode.DataObjects FsmNode.InputPort FsmNode.OutputPort FsmNode.HasAnimatorTrigger FsmNode.HasHitStateOverride FsmNode.BuildContextualMenu(ContextualMenuPopulateEvent) FsmNode.DisconnectAllPorts() FsmNode.SetErrorStyle(Color) FsmNode.ResetStyle() FsmNode.SetStateName(string) FsmNode.GetScriptableObject() FsmNode.UpdateNameStyle(string) FsmNode.SetPortColor(Color, Direction, string) FsmNode.ShowAnimatorParameterDropdown(Toggle) FsmNode.GetAnimatorSaveData() FsmNode.SetAnimatorSaveData(FsmAnimatorSaveData) FsmNode.ShowHitStateOverrideToggle(Toggle) FsmNode.GetHitNodeSaveData() FsmNode.SetHitNodeSaveData(FsmHitNodeSaveData) FsmNode.UpdateHitEnable(bool) Extension Methods FsmElementUtility.CreatePort(FsmNode, string, Orientation, Direction, Port.Capacity) FsmStyleUtility.AddClasses(VisualElement, params string[]) FsmStyleUtility.AddStyleSheets(VisualElement, params string[]) Methods Draw() Draws the node, adding ports and custom state attributes. public override void Draw() Initialize(string, FsmGraphView, Vector2) Initializes the FSM transition node. public override void Initialize(string nodeName, FsmGraphView graphView, Vector2 vectorPos) Parameters nodeName string The name of the node. graphView FsmGraphView The graph view this node belongs to. vectorPos Vector2 The position of the node in the graph."
  },
  "api/EditorWindow.FSMSystem.Elements.FsmVariableNode.html": {
    "href": "api/EditorWindow.FSMSystem.Elements.FsmVariableNode.html",
    "title": "Class FsmVariableNode | FSM Unity Framework",
    "keywords": "Class FsmVariableNode Namespace EditorWindow.FSMSystem.Elements Assembly EditorWindow.dll Represents an override node in an FSM graph, inheriting from FsmNode. With this node you are able to override the variable of a state node. public class FsmVariableNode : FsmNode Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node FsmNode FsmVariableNode Inherited Members FsmNode.Id FsmNode.StateName FsmNode.Connections FsmNode.NodeType FsmNode.StateScript FsmNode.DataObjects FsmNode.InputPort FsmNode.OutputPort FsmNode.HasAnimatorTrigger FsmNode.HasHitStateOverride FsmNode.BuildContextualMenu(ContextualMenuPopulateEvent) FsmNode.DisconnectAllPorts() FsmNode.SetErrorStyle(Color) FsmNode.ResetStyle() FsmNode.SetStateName(string) FsmNode.GetScriptableObject() FsmNode.UpdateNameStyle(string) FsmNode.SetPortColor(Color, Direction, string) FsmNode.ShowAnimatorParameterDropdown(Toggle) FsmNode.GetAnimatorSaveData() FsmNode.SetAnimatorSaveData(FsmAnimatorSaveData) FsmNode.ShowHitStateOverrideToggle(Toggle) FsmNode.GetHitNodeSaveData() FsmNode.SetHitNodeSaveData(FsmHitNodeSaveData) FsmNode.UpdateHitEnable(bool) Extension Methods FsmElementUtility.CreatePort(FsmNode, string, Orientation, Direction, Port.Capacity) FsmStyleUtility.AddClasses(VisualElement, params string[]) FsmStyleUtility.AddStyleSheets(VisualElement, params string[]) Methods ConnectToStateScript(StateScriptData) public void ConnectToStateScript(StateScriptData stateScript) Parameters stateScript StateScriptData Draw() Draws the node, adding ports and custom state attributes. public override void Draw() Initialize(string, FsmGraphView, Vector2) Initializes the FSM override node. public override void Initialize(string nodeName, FsmGraphView fsmGraphView, Vector2 vectorPos) Parameters nodeName string The name of the node. fsmGraphView FsmGraphView The graph view this node belongs to. vectorPos Vector2 The position of the node in the graph."
  },
  "api/EditorWindow.FSMSystem.Elements.html": {
    "href": "api/EditorWindow.FSMSystem.Elements.html",
    "title": "Namespace EditorWindow.FSMSystem.Elements | FSM Unity Framework",
    "keywords": "Namespace EditorWindow.FSMSystem.Elements Classes FsmCustomConditionNode Represents a custom condition node in an FSM graph, inheriting from FsmNode. With this node you are able to add and execute a function from any GameObject. FsmCustomStateNode Represents a custom state node in an FSM graph, inheriting from FsmNode. With this node you are able to add and execute a function from any GameObject. FsmDualTransitionNode Represents a dual transition node in an FSM graph, inheriting from FsmNode. In this case, there are two possible transitions, one for true and one for false. FsmExtensionNode Represents an FSM extension node, inheriting from FsmNode. This type of node is used to draw more comprehensive connections between states. FsmInitialNode Represents the initial node in an FSM graph, inheriting from FsmNode. Used to know the first state to execute in the FSM. FsmNode Represents the base class for all FSM node elements. FsmStateNode Represents a state node in an FSM graph, inheriting from FsmNode. FsmTransitionNode Represents a transition node in an FSM graph, inheriting from FsmNode. FsmVariableNode Represents an override node in an FSM graph, inheriting from FsmNode. With this node you are able to override the variable of a state node."
  },
  "api/EditorWindow.FSMSystem.Inspectors.FsmGraph.html": {
    "href": "api/EditorWindow.FSMSystem.Inspectors.FsmGraph.html",
    "title": "Class FsmGraph | FSM Unity Framework",
    "keywords": "Class FsmGraph Namespace EditorWindow.FSMSystem.Inspectors Assembly EditorWindow.dll Represents the finite state machine graph attached to a GameObject. [RequireComponent(typeof(Animator))] [RequireComponent(typeof(NavMeshAgent))] [RequireComponent(typeof(CapsuleCollider))] [RequireComponent(typeof(AudioSource))] [RequireComponent(typeof(EnemyHealthSystem))] [AddComponentMenu(\"FSM AI/FSM AI\")] public class FsmGraph : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FsmGraph Methods UpdateComponentOfGameObject() Updates the components of the GameObject based on the FSM graph. public void UpdateComponentOfGameObject()"
  },
  "api/EditorWindow.FSMSystem.Inspectors.FsmInspector.html": {
    "href": "api/EditorWindow.FSMSystem.Inspectors.FsmInspector.html",
    "title": "Class FsmInspector | FSM Unity Framework",
    "keywords": "Class FsmInspector Namespace EditorWindow.FSMSystem.Inspectors Assembly EditorWindow.dll Custom inspector for FSM graphs, enabling interaction with FSM graph data in the Unity Editor. [CustomEditor(typeof(FsmGraph))] public class FsmInspector : Editor Inheritance object Object ScriptableObject Editor FsmInspector Methods OnInspectorGUI() Overrides the default Inspector GUI to add custom drawing logic. This way you can add your created FSM Graphs to the GameObject. If the FSM Graph has saved data, the behavior will be added to the GameObject as well. You can swap graph or edit the current one by clicking the button \"Open FSM Graph\". public override void OnInspectorGUI()"
  },
  "api/EditorWindow.FSMSystem.Inspectors.chasingaiEditor.html": {
    "href": "api/EditorWindow.FSMSystem.Inspectors.chasingaiEditor.html",
    "title": "Class chasingaiEditor | FSM Unity Framework",
    "keywords": "Class chasingaiEditor Namespace EditorWindow.FSMSystem.Inspectors Assembly Assembly-CSharp.dll [CustomEditor(typeof(chasingai))] public class chasingaiEditor : Editor Inheritance object Object ScriptableObject Editor chasingaiEditor Methods OnInspectorGUI() Implement this function to make a custom inspector. public override void OnInspectorGUI()"
  },
  "api/EditorWindow.FSMSystem.Inspectors.html": {
    "href": "api/EditorWindow.FSMSystem.Inspectors.html",
    "title": "Namespace EditorWindow.FSMSystem.Inspectors | FSM Unity Framework",
    "keywords": "Namespace EditorWindow.FSMSystem.Inspectors Classes FsmGraph Represents the finite state machine graph attached to a GameObject. FsmInspector Custom inspector for FSM graphs, enabling interaction with FSM graph data in the Unity Editor."
  },
  "api/EditorWindow.FSMSystem.Inspectors.meleeAttackEditor.html": {
    "href": "api/EditorWindow.FSMSystem.Inspectors.meleeAttackEditor.html",
    "title": "Class meleeAttackEditor | FSM Unity Framework",
    "keywords": "Class meleeAttackEditor Namespace EditorWindow.FSMSystem.Inspectors Assembly Assembly-CSharp.dll [CustomEditor(typeof(meleeAttack))] public class meleeAttackEditor : Editor Inheritance object Object ScriptableObject Editor meleeAttackEditor Methods OnInspectorGUI() Implement this function to make a custom inspector. public override void OnInspectorGUI()"
  },
  "api/EditorWindow.FSMSystem.Utilities.FsmCreationNodesUtilities.html": {
    "href": "api/EditorWindow.FSMSystem.Utilities.FsmCreationNodesUtilities.html",
    "title": "Class FsmCreationNodesUtilities | FSM Unity Framework",
    "keywords": "Class FsmCreationNodesUtilities Namespace EditorWindow.FSMSystem.Utilities Assembly EditorWindow.dll public static class FsmCreationNodesUtilities Inheritance object FsmCreationNodesUtilities Methods CreateConditionNode(string) public static void CreateConditionNode(string stateName) Parameters stateName string CreateStateNode(string) public static void CreateStateNode(string stateName) Parameters stateName string"
  },
  "api/EditorWindow.FSMSystem.Utilities.FsmElementUtility.html": {
    "href": "api/EditorWindow.FSMSystem.Utilities.FsmElementUtility.html",
    "title": "Class FsmElementUtility | FSM Unity Framework",
    "keywords": "Class FsmElementUtility Namespace EditorWindow.FSMSystem.Utilities Assembly EditorWindow.dll Utility class for creating various UI elements for the FSM editor. public static class FsmElementUtility Inheritance object FsmElementUtility Methods CreateButton(string, Action) Creates a button. public static Button CreateButton(string text, Action onClick = null) Parameters text string Text of the button. onClick Action Action to be performed on button click. Returns Button Returns the created Button. CreateFoldout(string, bool) Creates a foldout element. public static Foldout CreateFoldout(string title, bool collapsed = false) Parameters title string Title of the foldout. collapsed bool Whether the foldout is collapsed initially. Returns Foldout Returns the created Foldout. CreateLabel(string, EventCallback<ChangeEvent<string>>) Creates a label. public static Label CreateLabel(string text = null, EventCallback<ChangeEvent<string>> onValueChanged = null) Parameters text string Text of the label. onValueChanged EventCallback<ChangeEvent<string>> Event callback for value change. Returns Label Returns the created Label. CreateObjectField<T>(string, T, EventCallback<ChangeEvent<Object>>) Creates a custom object field. public static CustomObjectField CreateObjectField<T>(string label = null, T value = null, EventCallback<ChangeEvent<Object>> onValueChanged = null) where T : Object Parameters label string Label for the object field. value T Initial value of the object field. onValueChanged EventCallback<ChangeEvent<Object>> Event callback for value change. Returns CustomObjectField Returns the created CustomObjectField. Type Parameters T Type of the object field. CreatePopupField(List<string>, int, EventCallback<ChangeEvent<string>>) Creates a popup field. public static PopupField<string> CreatePopupField(List<string> choices, int index = 0, EventCallback<ChangeEvent<string>> onValueChanged = null) Parameters choices List<string> List of choices for the popup field. index int Index of the default choice. onValueChanged EventCallback<ChangeEvent<string>> Event callback for value change. Returns PopupField<string> Returns the created PopupField. CreatePort(FsmNode, string, Orientation, Direction, Capacity) Creates a port for a node. public static Port CreatePort(this FsmNode node, string portName = \"\", Orientation orientation = Orientation.Horizontal, Direction direction = Direction.Input, Port.Capacity capacity = Capacity.Single) Parameters node FsmNode The node to which the port is added. portName string Name of the port. orientation Orientation Orientation of the port. direction Direction Direction of the port. capacity Port.Capacity Capacity of the port. Returns Port Returns the created Port. CreateTextArea(string, string, EventCallback<ChangeEvent<string>>) Creates a text area. public static TextField CreateTextArea(string value = null, string label = null, EventCallback<ChangeEvent<string>> onValueChanged = null) Parameters value string Initial value of the text area. label string Label for the text area. onValueChanged EventCallback<ChangeEvent<string>> Event callback for value change. Returns TextField Returns the created TextField as a text area. CreateTextField(string, string, EventCallback<ChangeEvent<string>>) Creates a text field. public static TextField CreateTextField(string value = null, string label = null, EventCallback<ChangeEvent<string>> onValueChanged = null) Parameters value string Initial value of the text field. label string Label for the text field. onValueChanged EventCallback<ChangeEvent<string>> Event callback for value change. Returns TextField Returns the created TextField. CreateToggle(string, bool, EventCallback<ChangeEvent<bool>>) Creates a toggle. public static Toggle CreateToggle(string label = null, bool value = false, EventCallback<ChangeEvent<bool>> onValueChanged = null) Parameters label string Label for the toggle. value bool Initial value of the toggle. onValueChanged EventCallback<ChangeEvent<bool>> Event callback for value change. Returns Toggle Returns the created Toggle."
  },
  "api/EditorWindow.FSMSystem.Utilities.FsmEnemyStateMachineEditor.html": {
    "href": "api/EditorWindow.FSMSystem.Utilities.FsmEnemyStateMachineEditor.html",
    "title": "Class FsmEnemyStateMachineEditor | FSM Unity Framework",
    "keywords": "Class FsmEnemyStateMachineEditor Namespace EditorWindow.FSMSystem.Utilities Assembly EditorWindow.dll Utility class for generating enemy state machine scripts. public static class FsmEnemyStateMachineEditor Inheritance object FsmEnemyStateMachineEditor Methods GenerateScript(FsmGraphSaveData) Generates and saves the script files based on the FSM graph data. public static void GenerateScript(FsmGraphSaveData saveData) Parameters saveData FsmGraphSaveData The save data containing FSM graph information."
  },
  "api/EditorWindow.FSMSystem.Utilities.FsmIOUtility.html": {
    "href": "api/EditorWindow.FSMSystem.Utilities.FsmIOUtility.html",
    "title": "Class FsmIOUtility | FSM Unity Framework",
    "keywords": "Class FsmIOUtility Namespace EditorWindow.FSMSystem.Utilities Assembly EditorWindow.dll Utility class for saving and loading FSM graphs and associated data. public static class FsmIOUtility Inheritance object FsmIOUtility Methods CreateFolder(string, string) Creates a folder in the specified path if it doesn't already exist. public static void CreateFolder(string path, string folderName) Parameters path string Path where the folder should be created. folderName string Name of the folder to create. CreateJson(StateScript, string) Creates a JSON file for the specified state script. public static void CreateJson(StateScript stateScript, string className) Parameters stateScript StateScript State script to serialize. className string Name of the class associated with the state script. FindGameObjectWithId<T>(string) Finds a GameObject with a specified ID in its IDGenerator component. public static GameObject FindGameObjectWithId<T>(string id) where T : MonoBehaviour Parameters id string The ID to search for. Returns GameObject The GameObject with the specified ID, if found; otherwise, null. Type Parameters T Type of MonoBehaviour to search for. Initialize(string, FsmGraphView, string, FsmHitSaveData) Initializes the FSM IO utility with necessary parameters. public static void Initialize(string graphName, FsmGraphView fsmGraphView, string initialState, FsmHitSaveData hitData) Parameters graphName string Name of the FSM graph. fsmGraphView FsmGraphView Reference to the FSM graph view. initialState string Name of the initial state. hitData FsmHitSaveData Hit data associated with the FSM. Load() Loads the FSM graph and associated data. public static void Load() LoadNode(FsmNodeSaveData, string) Loads a node from its saved data. public static FsmNode LoadNode(FsmNodeSaveData nodeData, string fileName) Parameters nodeData FsmNodeSaveData Node save data object. fileName string Name of the file. Returns FsmNode The loaded FSM node. Save() Saves the FSM graph and associated data. public static bool Save() Returns bool True if saving was successful, false otherwise. UpdateHitEnableOverrides(bool) public static void UpdateHitEnableOverrides(bool enableHitState) Parameters enableHitState bool"
  },
  "api/EditorWindow.FSMSystem.Utilities.FsmInspectorUtility.html": {
    "href": "api/EditorWindow.FSMSystem.Utilities.FsmInspectorUtility.html",
    "title": "Class FsmInspectorUtility | FSM Unity Framework",
    "keywords": "Class FsmInspectorUtility Namespace EditorWindow.FSMSystem.Utilities Assembly EditorWindow.dll Utility class for drawing custom inspector elements in the Unity Editor. public static class FsmInspectorUtility Inheritance object FsmInspectorUtility Methods DrawDisabledFields(Action) Draws fields in a disabled state. public static void DrawDisabledFields(Action action) Parameters action Action The action that draws the fields. DrawHeader(string) Draws a header label with bold styling. public static void DrawHeader(string label) Parameters label string The label text. DrawHelpBox(string, MessageType, bool) Draws a help box with the specified message and type. public static void DrawHelpBox(string message, MessageType messageType = MessageType.Info, bool wide = true) Parameters message string The help box message. messageType MessageType The type of the message. wide bool Whether the help box should be wide. DrawPropertyField(SerializedProperty) Draws a property field for the given serialized property. public static bool DrawPropertyField(this SerializedProperty serializedProperty) Parameters serializedProperty SerializedProperty The serialized property to draw. Returns bool True if the property has been modified; otherwise, false. DrawSpace(int) Draws a space of the specified amount. public static void DrawSpace(int amount = 4) Parameters amount int The amount of space to draw."
  },
  "api/EditorWindow.FSMSystem.Utilities.FsmStyleUtility.html": {
    "href": "api/EditorWindow.FSMSystem.Utilities.FsmStyleUtility.html",
    "title": "Class FsmStyleUtility | FSM Unity Framework",
    "keywords": "Class FsmStyleUtility Namespace EditorWindow.FSMSystem.Utilities Assembly EditorWindow.dll Utility class for adding classes and style sheets to VisualElements in Unity's UI Toolkit. public static class FsmStyleUtility Inheritance object FsmStyleUtility Methods AddClasses(VisualElement, params string[]) Adds one or more classes to a VisualElement. public static VisualElement AddClasses(this VisualElement element, params string[] classNames) Parameters element VisualElement The VisualElement to which classes will be added. classNames string[] The names of the classes to add. Returns VisualElement The modified VisualElement. AddStyleSheets(VisualElement, params string[]) Adds one or more style sheets to a VisualElement. public static VisualElement AddStyleSheets(this VisualElement element, params string[] styleSheetNames) Parameters element VisualElement The VisualElement to which style sheets will be added. styleSheetNames string[] The names of the style sheets to add. Returns VisualElement The modified VisualElement."
  },
  "api/EditorWindow.FSMSystem.Utilities.html": {
    "href": "api/EditorWindow.FSMSystem.Utilities.html",
    "title": "Namespace EditorWindow.FSMSystem.Utilities | FSM Unity Framework",
    "keywords": "Namespace EditorWindow.FSMSystem.Utilities Classes FsmCreationNodesUtilities FsmElementUtility Utility class for creating various UI elements for the FSM editor. FsmEnemyStateMachineEditor Utility class for generating enemy state machine scripts. FsmIOUtility Utility class for saving and loading FSM graphs and associated data. FsmInspectorUtility Utility class for drawing custom inspector elements in the Unity Editor. FsmStyleUtility Utility class for adding classes and style sheets to VisualElements in Unity's UI Toolkit."
  },
  "api/EditorWindow.FSMSystem.Windows.FsmCreateScriptableObjectWindow.html": {
    "href": "api/EditorWindow.FSMSystem.Windows.FsmCreateScriptableObjectWindow.html",
    "title": "Class FsmCreateScriptableObjectWindow | FSM Unity Framework",
    "keywords": "Class FsmCreateScriptableObjectWindow Namespace EditorWindow.FSMSystem.Windows Assembly EditorWindow.dll Editor window for creating FSM Graph scriptable objects and configuring enemy setup. public class FsmCreateScriptableObjectWindow : EditorWindow Inheritance object Object ScriptableObject EditorWindow FsmCreateScriptableObjectWindow Methods ShowWindow() [MenuItem(\"Window/FSM/FSM Graph\")] public static void ShowWindow()"
  },
  "api/EditorWindow.FSMSystem.Windows.FsmEditorWindow.html": {
    "href": "api/EditorWindow.FSMSystem.Windows.FsmEditorWindow.html",
    "title": "Class FsmEditorWindow | FSM Unity Framework",
    "keywords": "Class FsmEditorWindow Namespace EditorWindow.FSMSystem.Windows Assembly EditorWindow.dll Represents an editor window for managing finite state machines. This window contains a graph view for creating and editing FSMs. The window also contains a toolbar with buttons for saving, reloading, clearing, and toggling the minimap. public class FsmEditorWindow : EditorWindow Inheritance object Object ScriptableObject EditorWindow FsmEditorWindow Fields initialState public string initialState Field Value string Methods DisableSaving() public void DisableSaving() EnableSaving() public void EnableSaving() GetHitStatePopup() public FsmHitStatePopup GetHitStatePopup() Returns FsmHitStatePopup GetWindow() public static FsmEditorWindow GetWindow() Returns FsmEditorWindow OpenWithSaveData(FsmGraphSaveData) Opens the FSM editor window with the provided save data. public static void OpenWithSaveData(FsmGraphSaveData saveData) Parameters saveData FsmGraphSaveData The save data containing information about the FSM graph."
  },
  "api/EditorWindow.FSMSystem.Windows.FsmGraphView.html": {
    "href": "api/EditorWindow.FSMSystem.Windows.FsmGraphView.html",
    "title": "Class FsmGraphView | FSM Unity Framework",
    "keywords": "Class FsmGraphView Namespace EditorWindow.FSMSystem.Windows Assembly EditorWindow.dll The graph view that hold the content for the FSM system. public class FsmGraphView : GraphView Inheritance object CallbackEventHandler Focusable VisualElement GraphView FsmGraphView Extension Methods FsmStyleUtility.AddClasses(VisualElement, params string[]) FsmStyleUtility.AddStyleSheets(VisualElement, params string[]) Constructors FsmGraphView(FsmEditorWindow) Constructor for the FSM graph view. Uses the FsmEditorWindow as a parameter, and loads the content of the graph view inside the window. public FsmGraphView(FsmEditorWindow window) Parameters window FsmEditorWindow Methods ClearGraph() public void ClearGraph() CreateNode(string, Vector2, FsmNodeType, bool, bool) Creates a new node in the graph view. public FsmNode CreateNode(string nodeName, Vector2 position, FsmNodeType nodeT, bool fixName = true, bool shouldDraw = true) Parameters nodeName string The name of the node. position Vector2 The position of the node. nodeT FsmNodeType The type of the node. fixName bool Should the name be fixed? shouldDraw bool Should the node be drawn? Returns FsmNode Returns the FsmNode that you just created. GetCompatiblePorts(Port, NodeAdapter) Get all ports compatible with given port. public override List<Port> GetCompatiblePorts(Port startPort, NodeAdapter nodeAdapter) Parameters startPort Port Start port to validate against. nodeAdapter NodeAdapter Node adapter. Returns List<Port> List of compatible ports. GetLocalMousePosition(Vector2, bool) public Vector2 GetLocalMousePosition(Vector2 mousePosition, bool isSearchWindow = false) Parameters mousePosition Vector2 isSearchWindow bool Returns Vector2 GetWindow() public FsmEditorWindow GetWindow() Returns FsmEditorWindow ToggleMiniMap() public void ToggleMiniMap()"
  },
  "api/EditorWindow.FSMSystem.Windows.FsmHitStatePopup.html": {
    "href": "api/EditorWindow.FSMSystem.Windows.FsmHitStatePopup.html",
    "title": "Class FsmHitStatePopup | FSM Unity Framework",
    "keywords": "Class FsmHitStatePopup Namespace EditorWindow.FSMSystem.Windows Assembly EditorWindow.dll Popup window content for configuring hit state settings. public class FsmHitStatePopup : PopupWindowContent Inheritance object PopupWindowContent FsmHitStatePopup Methods CanDie() Checks if the entity can die from hit state. public bool CanDie() Returns bool True if the entity can die, otherwise false. GetTimeToWait() Gets the time to wait for hit state. public float GetTimeToWait() Returns float The time to wait for hit state. GetWindowSize() Gets the size of the popup window. public override Vector2 GetWindowSize() Returns Vector2 The size of the popup window. Initialize(FsmHitSaveData) Initializes the hit state popup with the specified hit data. public void Initialize(FsmHitSaveData hitData) Parameters hitData FsmHitSaveData The hit data to initialize the popup with. IsHitStateEnabled() Checks if hit state is enabled. public bool IsHitStateEnabled() Returns bool True if hit state is enabled, otherwise false. OnGUI(Rect) Renders the GUI for the popup window. public override void OnGUI(Rect rect) Parameters rect Rect The position and size of the popup window."
  },
  "api/EditorWindow.FSMSystem.Windows.FsmHoverPopupWindow.html": {
    "href": "api/EditorWindow.FSMSystem.Windows.FsmHoverPopupWindow.html",
    "title": "Class FsmHoverPopupWindow | FSM Unity Framework",
    "keywords": "Class FsmHoverPopupWindow Namespace EditorWindow.FSMSystem.Windows Assembly EditorWindow.dll Class representing a popup window with instructions on enabling hit state override. public class FsmHoverPopupWindow : PopupWindowContent Inheritance object PopupWindowContent FsmHoverPopupWindow Methods GetWindowSize() Gets the size of the popup window. public override Vector2 GetWindowSize() Returns Vector2 The size of the popup window. OnGUI(Rect) Draws the GUI for the popup window. public override void OnGUI(Rect rect) Parameters rect Rect The rectangle within which to draw the GUI."
  },
  "api/EditorWindow.FSMSystem.Windows.FsmNodeCreationWindow.html": {
    "href": "api/EditorWindow.FSMSystem.Windows.FsmNodeCreationWindow.html",
    "title": "Class FsmNodeCreationWindow | FSM Unity Framework",
    "keywords": "Class FsmNodeCreationWindow Namespace EditorWindow.FSMSystem.Windows Assembly Assembly-CSharp.dll public class FsmNodeCreationWindow : EditorWindow Inheritance object Object ScriptableObject EditorWindow FsmNodeCreationWindow Methods ShowWindow() [MenuItem(\"Window/FSM/Create State or Condition\")] public static void ShowWindow()"
  },
  "api/EditorWindow.FSMSystem.Windows.FsmSearchWindow.html": {
    "href": "api/EditorWindow.FSMSystem.Windows.FsmSearchWindow.html",
    "title": "Class FsmSearchWindow | FSM Unity Framework",
    "keywords": "Class FsmSearchWindow Namespace EditorWindow.FSMSystem.Windows Assembly EditorWindow.dll ScriptableObject used to create the search window for adding nodes to the FSM graph. public class FsmSearchWindow : ScriptableObject Inheritance object Object ScriptableObject FsmSearchWindow Methods CreateSearchTree(SearchWindowContext) Creates the search tree for the search window. public List<SearchTreeEntry> CreateSearchTree(SearchWindowContext context) Parameters context SearchWindowContext The search window context. Returns List<SearchTreeEntry> The search tree entries. Initialize(FsmGraphView) Initializes the search window with the specified FSM graph view. public void Initialize(FsmGraphView graphView) Parameters graphView FsmGraphView The FSM graph view to initialize the search window with. OnSelectEntry(SearchTreeEntry, SearchWindowContext) Handles the selection of an entry in the search window. Creating a node based on the selected entry. public bool OnSelectEntry(SearchTreeEntry searchTreeEntry, SearchWindowContext context) Parameters searchTreeEntry SearchTreeEntry The selected search tree entry. context SearchWindowContext The search window context. Returns bool True if the entry was successfully selected, otherwise false."
  },
  "api/EditorWindow.FSMSystem.Windows.html": {
    "href": "api/EditorWindow.FSMSystem.Windows.html",
    "title": "Namespace EditorWindow.FSMSystem.Windows | FSM Unity Framework",
    "keywords": "Namespace EditorWindow.FSMSystem.Windows Classes FsmCreateScriptableObjectWindow Editor window for creating FSM Graph scriptable objects and configuring enemy setup. FsmEditorWindow Represents an editor window for managing finite state machines. This window contains a graph view for creating and editing FSMs. The window also contains a toolbar with buttons for saving, reloading, clearing, and toggling the minimap. FsmGraphView The graph view that hold the content for the FSM system. FsmHitStatePopup Popup window content for configuring hit state settings. FsmHoverPopupWindow Class representing a popup window with instructions on enabling hit state override. FsmSearchWindow ScriptableObject used to create the search window for adding nodes to the FSM graph."
  },
  "api/FSM.Enemy.EnemyHealthBar.html": {
    "href": "api/FSM.Enemy.EnemyHealthBar.html",
    "title": "Class EnemyHealthBar | FSM Unity Framework",
    "keywords": "Class EnemyHealthBar Namespace FSM.Enemy Assembly FSM.dll Class responsible for updating the health bar of an enemy. public class EnemyHealthBar : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EnemyHealthBar Methods UpdateHealthBar(float, float) Updates the health bar based on the provided max and current health values. public void UpdateHealthBar(float maxHealth, float currentHealth) Parameters maxHealth float Maximum health of the enemy. currentHealth float Current health of the enemy."
  },
  "api/FSM.Enemy.EnemyHealthSystem.html": {
    "href": "api/FSM.Enemy.EnemyHealthSystem.html",
    "title": "Class EnemyHealthSystem | FSM Unity Framework",
    "keywords": "Class EnemyHealthSystem Namespace FSM.Enemy Assembly FSM.dll Class responsible for managing the health of an enemy. public class EnemyHealthSystem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EnemyHealthSystem Fields maxHealth public float maxHealth Field Value float Methods Die() Destroys the enemy GameObject. public void Die() GetCurrentHealth() Returns the current health of the enemy. public float GetCurrentHealth() Returns float GetMaxHealth() Returns the maximum health of the enemy. public float GetMaxHealth() Returns float GetPreviousHealth() Returns the previous health of the enemy. public float GetPreviousHealth() Returns float SetPreviousHealth(float) Sets the previous health of the enemy. public void SetPreviousHealth(float health) Parameters health float The previous health value to set. TakeDamage(float) Inflicts damage to the enemy and updates the health bar. public void TakeDamage(float amount) Parameters amount float Amount of damage to inflict."
  },
  "api/FSM.Enemy.html": {
    "href": "api/FSM.Enemy.html",
    "title": "Namespace FSM.Enemy | FSM Unity Framework",
    "keywords": "Namespace FSM.Enemy Classes EnemyHealthBar Class responsible for updating the health bar of an enemy. EnemyHealthSystem Class responsible for managing the health of an enemy."
  },
  "api/FSM.Enumerations.FsmNodeType.html": {
    "href": "api/FSM.Enumerations.FsmNodeType.html",
    "title": "Enum FsmNodeType | FSM Unity Framework",
    "keywords": "Enum FsmNodeType Namespace FSM.Enumerations Assembly FSM.dll Enumeration representing different types of FSM nodes. public enum FsmNodeType Fields CustomCondition = 6 CustomState = 5 DualTransition = 3 Extension = 4 Initial = 2 State = 0 Transition = 1 Variable = 7"
  },
  "api/FSM.Enumerations.FsmOperands.html": {
    "href": "api/FSM.Enumerations.FsmOperands.html",
    "title": "Enum FsmOperands | FSM Unity Framework",
    "keywords": "Enum FsmOperands Namespace FSM.Enumerations Assembly FSM.dll Enumeration representing different comparison operands. public enum FsmOperands Fields EqualTo = 2 GreaterThan = 0 LessThan = 1 NotEqualTo = 3"
  },
  "api/FSM.Enumerations.FsmStates.html": {
    "href": "api/FSM.Enumerations.FsmStates.html",
    "title": "Enum FsmStates | FSM Unity Framework",
    "keywords": "Enum FsmStates Namespace FSM.Enumerations Assembly FSM.dll Enumeration representing different states in a Finite State Machine. public enum FsmStates Fields Alert = 10 Attack = 3 Chase = 2 Custom = 9 Die = 5 Flee = 7 Hit = 4 Idle = 0 Patrol = 1 Search = 6 Variable = 8"
  },
  "api/FSM.Enumerations.html": {
    "href": "api/FSM.Enumerations.html",
    "title": "Namespace FSM.Enumerations | FSM Unity Framework",
    "keywords": "Namespace FSM.Enumerations Enums FsmNodeType Enumeration representing different types of FSM nodes. FsmOperands Enumeration representing different comparison operands. FsmStates Enumeration representing different states in a Finite State Machine."
  },
  "api/FSM.Nodes.Data.FsmNodeConnectionData.html": {
    "href": "api/FSM.Nodes.Data.FsmNodeConnectionData.html",
    "title": "Class FsmNodeConnectionData | FSM Unity Framework",
    "keywords": "Class FsmNodeConnectionData Namespace FSM.Nodes.Data Assembly FSM.dll Data class representing a connection between FSM nodes. [Serializable] public class FsmNodeConnectionData Inheritance object FsmNodeConnectionData Properties NextNode The next node connected to this connection. public FsmNodeSo NextNode { get; set; } Property Value FsmNodeSo Text The text associated with the connection. public string Text { get; set; } Property Value string"
  },
  "api/FSM.Nodes.Data.html": {
    "href": "api/FSM.Nodes.Data.html",
    "title": "Namespace FSM.Nodes.Data | FSM Unity Framework",
    "keywords": "Namespace FSM.Nodes.Data Classes FsmNodeConnectionData Data class representing a connection between FSM nodes."
  },
  "api/FSM.Nodes.FsmGraph.html": {
    "href": "api/FSM.Nodes.FsmGraph.html",
    "title": "Class FsmGraph | FSM Unity Framework",
    "keywords": "Class FsmGraph Namespace FSM.Nodes Assembly Assembly-CSharp.dll Represents the finite state machine graph attached to a GameObject. [RequireComponent(typeof(Animator))] [RequireComponent(typeof(NavMeshAgent))] [RequireComponent(typeof(CapsuleCollider))] [RequireComponent(typeof(AudioSource))] [RequireComponent(typeof(EnemyHealthSystem))] [AddComponentMenu(\"FSM AI/FSM AI\")] public class FsmGraph : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FsmGraph Methods UpdateComponentOfGameObject() Updates the components of the GameObject based on the FSM graph. public void UpdateComponentOfGameObject()"
  },
  "api/FSM.Nodes.ScriptableObjects.FsmNodeSo.html": {
    "href": "api/FSM.Nodes.ScriptableObjects.FsmNodeSo.html",
    "title": "Class FsmNodeSo | FSM Unity Framework",
    "keywords": "Class FsmNodeSo Namespace FSM.Nodes.ScriptableObjects Assembly FSM.dll public class FsmNodeSo : ScriptableObject Inheritance object Object ScriptableObject FsmNodeSo Properties Connections public List<FsmNodeConnectionData> Connections { get; set; } Property Value List<FsmNodeConnectionData> DataObject public string DataObject { get; set; } Property Value string NodeName public string NodeName { get; set; } Property Value string NodeType public FsmNodeType NodeType { get; set; } Property Value FsmNodeType Methods Initialize(string, string, List<FsmNodeConnectionData>, FsmNodeType, string) public void Initialize(string nodeName, string text, List<FsmNodeConnectionData> connections, FsmNodeType nodeType, string dataObject) Parameters nodeName string text string connections List<FsmNodeConnectionData> nodeType FsmNodeType dataObject string"
  },
  "api/FSM.Nodes.ScriptableObjects.FsmNodesContainerSo.html": {
    "href": "api/FSM.Nodes.ScriptableObjects.FsmNodesContainerSo.html",
    "title": "Class FsmNodesContainerSo | FSM Unity Framework",
    "keywords": "Class FsmNodesContainerSo Namespace FSM.Nodes.ScriptableObjects Assembly FSM.dll public class FsmNodesContainerSo : ScriptableObject Inheritance object Object ScriptableObject FsmNodesContainerSo Properties FileName public string FileName { get; set; } Property Value string UngroupedNodes public List<FsmNodeSo> UngroupedNodes { get; set; } Property Value List<FsmNodeSo> Methods GetUngroupedStateNames() public List<string> GetUngroupedStateNames() Returns List<string> Initialize(string) public void Initialize(string fileName) Parameters fileName string"
  },
  "api/FSM.Nodes.ScriptableObjects.html": {
    "href": "api/FSM.Nodes.ScriptableObjects.html",
    "title": "Namespace FSM.Nodes.ScriptableObjects | FSM Unity Framework",
    "keywords": "Namespace FSM.Nodes.ScriptableObjects Classes FsmNodeSo FsmNodesContainerSo"
  },
  "api/FSM.Nodes.States.IAction.html": {
    "href": "api/FSM.Nodes.States.IAction.html",
    "title": "Interface IAction | FSM Unity Framework",
    "keywords": "Interface IAction Namespace FSM.Nodes.States Assembly FSM.dll Interface for defining actions. public interface IAction Methods Execute() Executes the action. void Execute()"
  },
  "api/FSM.Nodes.States.ICondition.html": {
    "href": "api/FSM.Nodes.States.ICondition.html",
    "title": "Interface ICondition | FSM Unity Framework",
    "keywords": "Interface ICondition Namespace FSM.Nodes.States Assembly FSM.dll Interface for defining conditions. public interface ICondition Methods Condition() Evaluates the condition. bool Condition() Returns bool True if the condition is met, otherwise false."
  },
  "api/FSM.Nodes.States.StateScript.html": {
    "href": "api/FSM.Nodes.States.StateScript.html",
    "title": "Class StateScript | FSM Unity Framework",
    "keywords": "Class StateScript Namespace FSM.Nodes.States Assembly FSM.dll Abstract base class for state scripts. [Serializable] public abstract class StateScript : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour StateScript Derived AttackStateScript ChaseStateScript CustomConditionScript CustomStateScript DistanceConditionScript FleeStateScript HealthConditionScript HearingConditionScript IdleStateScript NextStateConditionScript PatrolStateScript SearchStateScript SeeingConditionScript VariableConditionScript Fields Agent Reference to the NavMeshAgent component. protected NavMeshAgent Agent Field Value NavMeshAgent Player Reference to the player GameObject. protected GameObject Player Field Value GameObject Methods GetStateName() Gets the name of the state. public string GetStateName() Returns string The name of the state. GetVariables() Retrieves public variables of the StateScript and returns them in a dictionary. public Dictionary<string, object> GetVariables() Returns Dictionary<string, object> A dictionary containing variable names and their values. HideFlagsInspector() Hides the StateScript from the inspector. public void HideFlagsInspector() InspectVariables() Inspects public variables of the StateScript and returns their values. public List<string> InspectVariables() Returns List<string> A list of strings representing the inspected variables. SetStateName(string) Sets the name of the state. public void SetStateName(string newName) Parameters newName string The new name of the state. SetVariableValue(string, object) Sets the value of a public variable in the StateScript. public void SetVariableValue(string variableName, object newValue) Parameters variableName string The name of the variable to set. newValue object The new value to assign to the variable."
  },
  "api/FSM.Nodes.States.StateScriptData.html": {
    "href": "api/FSM.Nodes.States.StateScriptData.html",
    "title": "Class StateScriptData | FSM Unity Framework",
    "keywords": "Class StateScriptData Namespace FSM.Nodes.States Assembly FSM.dll Data class for storing state script variables and metadata. public class StateScriptData Inheritance object StateScriptData Derived AttackData ChaseData CustomConditionData CustomData DistanceData FleeData HealthData HearingData IdleData NextStateData PatrolData SearchData SeeingData VariableData Methods GetStateName() Gets the name of the state. public string GetStateName() Returns string The name of the state. GetVariables() Retrieves public variables of the StateScriptData and returns them in a dictionary. public Dictionary<string, object> GetVariables() Returns Dictionary<string, object> A dictionary containing variable names and their values. InspectVariables() Inspects public variables of the StateScriptData and returns their values. public List<string> InspectVariables() Returns List<string> A list of strings representing the inspected variables. RemoveVariable(string, object) Removes a variable from the StateScriptData. public void RemoveVariable(string variableName, object pastValue) Parameters variableName string The name of the variable to remove. pastValue object The value of the variable to remove. SetStateName(string) Sets the name of the state. protected void SetStateName(string name) Parameters name string The new name of the state. SetVariableValue(string, object) Sets the value of a public variable in the StateScriptData. public void SetVariableValue(string variableName, object newValue) Parameters variableName string The name of the variable to set. newValue object The new value to assign to the variable."
  },
  "api/FSM.Nodes.States.StateScripts.AttackStateScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.AttackStateScript.html",
    "title": "Class AttackStateScript | FSM Unity Framework",
    "keywords": "Class AttackStateScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class AttackStateScript : StateScript, IAction Inheritance object Object Component Behaviour MonoBehaviour StateScript AttackStateScript Implements IAction Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors AttackStateScript() public AttackStateScript() Fields attackDamage public float attackDamage Field Value float attackFrequency public float attackFrequency Field Value float Methods Execute() Executes the action. public void Execute()"
  },
  "api/FSM.Nodes.States.StateScripts.ChaseStateScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.ChaseStateScript.html",
    "title": "Class ChaseStateScript | FSM Unity Framework",
    "keywords": "Class ChaseStateScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class ChaseStateScript : StateScript, IAction Inheritance object Object Component Behaviour MonoBehaviour StateScript ChaseStateScript Implements IAction Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors ChaseStateScript() public ChaseStateScript() Fields chaseRange public float chaseRange Field Value float chaseSpeed public float chaseSpeed Field Value float Methods Execute() Executes the action. public void Execute()"
  },
  "api/FSM.Nodes.States.StateScripts.CustomConditionScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.CustomConditionScript.html",
    "title": "Class CustomConditionScript | FSM Unity Framework",
    "keywords": "Class CustomConditionScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class CustomConditionScript : StateScript, ICondition Inheritance object Object Component Behaviour MonoBehaviour StateScript CustomConditionScript Implements ICondition Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors CustomConditionScript() public CustomConditionScript() Fields selectedComponent public string selectedComponent Field Value string selectedFunction public string selectedFunction Field Value string selectedGameObject public string selectedGameObject Field Value string Methods Condition() Evaluates the condition. public bool Condition() Returns bool True if the condition is met, otherwise false."
  },
  "api/FSM.Nodes.States.StateScripts.CustomStateScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.CustomStateScript.html",
    "title": "Class CustomStateScript | FSM Unity Framework",
    "keywords": "Class CustomStateScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class CustomStateScript : StateScript, IAction Inheritance object Object Component Behaviour MonoBehaviour StateScript CustomStateScript Implements IAction Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors CustomStateScript() public CustomStateScript() Fields selectedComponent public string selectedComponent Field Value string selectedFunction public string selectedFunction Field Value string selectedGameObject public string selectedGameObject Field Value string Methods Execute() Executes the action. public void Execute()"
  },
  "api/FSM.Nodes.States.StateScripts.DistanceConditionScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.DistanceConditionScript.html",
    "title": "Class DistanceConditionScript | FSM Unity Framework",
    "keywords": "Class DistanceConditionScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class DistanceConditionScript : StateScript, ICondition Inheritance object Object Component Behaviour MonoBehaviour StateScript DistanceConditionScript Implements ICondition Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors DistanceConditionScript() public DistanceConditionScript() Fields distanceFromPlayer public float distanceFromPlayer Field Value float operand public FsmOperands operand Field Value FsmOperands Methods Condition() Evaluates the condition. public bool Condition() Returns bool True if the condition is met, otherwise false."
  },
  "api/FSM.Nodes.States.StateScripts.FleeStateScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.FleeStateScript.html",
    "title": "Class FleeStateScript | FSM Unity Framework",
    "keywords": "Class FleeStateScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class FleeStateScript : StateScript, IAction Inheritance object Object Component Behaviour MonoBehaviour StateScript FleeStateScript Implements IAction Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors FleeStateScript() public FleeStateScript() Fields detectionRange public float detectionRange Field Value float fleeDistance public float fleeDistance Field Value float fleeSpeed public float fleeSpeed Field Value float Methods Execute() Executes the action. public void Execute() HasReachedDestination() public bool HasReachedDestination() Returns bool"
  },
  "api/FSM.Nodes.States.StateScripts.HealthConditionScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.HealthConditionScript.html",
    "title": "Class HealthConditionScript | FSM Unity Framework",
    "keywords": "Class HealthConditionScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class HealthConditionScript : StateScript, ICondition Inheritance object Object Component Behaviour MonoBehaviour StateScript HealthConditionScript Implements ICondition Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors HealthConditionScript() public HealthConditionScript() Fields health public float health Field Value float operand public FsmOperands operand Field Value FsmOperands Methods Condition() Evaluates the condition. public bool Condition() Returns bool True if the condition is met, otherwise false."
  },
  "api/FSM.Nodes.States.StateScripts.HearingConditionScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.HearingConditionScript.html",
    "title": "Class HearingConditionScript | FSM Unity Framework",
    "keywords": "Class HearingConditionScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class HearingConditionScript : StateScript, ICondition Inheritance object Object Component Behaviour MonoBehaviour StateScript HearingConditionScript Implements ICondition Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors HearingConditionScript() public HearingConditionScript() Fields hearingRange public float hearingRange Field Value float minPlayerSpeed public float minPlayerSpeed Field Value float Methods Condition() Evaluates the condition. public bool Condition() Returns bool True if the condition is met, otherwise false."
  },
  "api/FSM.Nodes.States.StateScripts.IdleStateScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.IdleStateScript.html",
    "title": "Class IdleStateScript | FSM Unity Framework",
    "keywords": "Class IdleStateScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class IdleStateScript : StateScript, IAction Inheritance object Object Component Behaviour MonoBehaviour StateScript IdleStateScript Implements IAction Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors IdleStateScript() public IdleStateScript() Methods Execute() Executes the action. public void Execute()"
  },
  "api/FSM.Nodes.States.StateScripts.NextStateConditionScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.NextStateConditionScript.html",
    "title": "Class NextStateConditionScript | FSM Unity Framework",
    "keywords": "Class NextStateConditionScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class NextStateConditionScript : StateScript, ICondition Inheritance object Object Component Behaviour MonoBehaviour StateScript NextStateConditionScript Implements ICondition Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors NextStateConditionScript() public NextStateConditionScript() Methods Condition() Evaluates the condition. public bool Condition() Returns bool True if the condition is met, otherwise false."
  },
  "api/FSM.Nodes.States.StateScripts.PatrolStateScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.PatrolStateScript.html",
    "title": "Class PatrolStateScript | FSM Unity Framework",
    "keywords": "Class PatrolStateScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class PatrolStateScript : StateScript, IAction Inheritance object Object Component Behaviour MonoBehaviour StateScript PatrolStateScript Implements IAction Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors PatrolStateScript() public PatrolStateScript() Fields patrolPoints public List<string> patrolPoints Field Value List<string> Methods Execute() Executes the action. public void Execute() FindGameObjectWithId<T>(string) public GameObject FindGameObjectWithId<T>(string id) where T : MonoBehaviour Parameters id string Returns GameObject Type Parameters T RemovePatrolPoint(string) public void RemovePatrolPoint(string patrolPoint) Parameters patrolPoint string"
  },
  "api/FSM.Nodes.States.StateScripts.SearchStateScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.SearchStateScript.html",
    "title": "Class SearchStateScript | FSM Unity Framework",
    "keywords": "Class SearchStateScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class SearchStateScript : StateScript, IAction Inheritance object Object Component Behaviour MonoBehaviour StateScript SearchStateScript Implements IAction Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors SearchStateScript() public SearchStateScript() Fields exploreRadius public float exploreRadius Field Value float Methods Execute() Executes the action. public void Execute() HasReachedDestination() public bool HasReachedDestination() Returns bool"
  },
  "api/FSM.Nodes.States.StateScripts.SeeingConditionScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.SeeingConditionScript.html",
    "title": "Class SeeingConditionScript | FSM Unity Framework",
    "keywords": "Class SeeingConditionScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class SeeingConditionScript : StateScript, ICondition Inheritance object Object Component Behaviour MonoBehaviour StateScript SeeingConditionScript Implements ICondition Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors SeeingConditionScript() public SeeingConditionScript() Fields distance public float distance Field Value float Methods Condition() Evaluates the condition. public bool Condition() Returns bool True if the condition is met, otherwise false."
  },
  "api/FSM.Nodes.States.StateScripts.VariableConditionScript.html": {
    "href": "api/FSM.Nodes.States.StateScripts.VariableConditionScript.html",
    "title": "Class VariableConditionScript | FSM Unity Framework",
    "keywords": "Class VariableConditionScript Namespace FSM.Nodes.States.StateScripts Assembly FSM.dll public class VariableConditionScript : StateScript, IAction Inheritance object Object Component Behaviour MonoBehaviour StateScript VariableConditionScript Implements IAction Inherited Members StateScript.Player StateScript.Agent StateScript.InspectVariables() StateScript.GetVariables() StateScript.SetVariableValue(string, object) StateScript.SetStateName(string) StateScript.GetStateName() StateScript.HideFlagsInspector() Constructors VariableConditionScript() public VariableConditionScript() Fields selectedVariable public string selectedVariable Field Value string value public string value Field Value string Methods Execute() Executes the action. public void Execute() SetStateScript(StateScript) public void SetStateScript(StateScript stateScript) Parameters stateScript StateScript"
  },
  "api/FSM.Nodes.States.StateScripts.html": {
    "href": "api/FSM.Nodes.States.StateScripts.html",
    "title": "Namespace FSM.Nodes.States.StateScripts | FSM Unity Framework",
    "keywords": "Namespace FSM.Nodes.States.StateScripts Classes AttackStateScript ChaseStateScript CustomConditionScript CustomStateScript DistanceConditionScript FleeStateScript HealthConditionScript HearingConditionScript IdleStateScript NextStateConditionScript PatrolStateScript SearchStateScript SeeingConditionScript VariableConditionScript"
  },
  "api/FSM.Nodes.States.StatesData.AttackData.html": {
    "href": "api/FSM.Nodes.States.StatesData.AttackData.html",
    "title": "Class AttackData | FSM Unity Framework",
    "keywords": "Class AttackData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class AttackData : StateScriptData Inheritance object StateScriptData AttackData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors AttackData() public AttackData() Fields attackDamage public float attackDamage Field Value float attackFrequency public float attackFrequency Field Value float"
  },
  "api/FSM.Nodes.States.StatesData.ChaseData.html": {
    "href": "api/FSM.Nodes.States.StatesData.ChaseData.html",
    "title": "Class ChaseData | FSM Unity Framework",
    "keywords": "Class ChaseData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class ChaseData : StateScriptData Inheritance object StateScriptData ChaseData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors ChaseData() public ChaseData() Fields chaseRange public float chaseRange Field Value float chaseSpeed public float chaseSpeed Field Value float"
  },
  "api/FSM.Nodes.States.StatesData.CustomConditionData.html": {
    "href": "api/FSM.Nodes.States.StatesData.CustomConditionData.html",
    "title": "Class CustomConditionData | FSM Unity Framework",
    "keywords": "Class CustomConditionData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class CustomConditionData : StateScriptData Inheritance object StateScriptData CustomConditionData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors CustomConditionData() public CustomConditionData() Fields selectedComponent public string selectedComponent Field Value string selectedFunction public string selectedFunction Field Value string selectedGameObject public string selectedGameObject Field Value string"
  },
  "api/FSM.Nodes.States.StatesData.CustomData.html": {
    "href": "api/FSM.Nodes.States.StatesData.CustomData.html",
    "title": "Class CustomData | FSM Unity Framework",
    "keywords": "Class CustomData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class CustomData : StateScriptData Inheritance object StateScriptData CustomData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors CustomData() public CustomData() Fields selectedComponent public string selectedComponent Field Value string selectedFunction public string selectedFunction Field Value string selectedGameObject public string selectedGameObject Field Value string"
  },
  "api/FSM.Nodes.States.StatesData.DistanceData.html": {
    "href": "api/FSM.Nodes.States.StatesData.DistanceData.html",
    "title": "Class DistanceData | FSM Unity Framework",
    "keywords": "Class DistanceData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class DistanceData : StateScriptData Inheritance object StateScriptData DistanceData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors DistanceData() public DistanceData() Fields distanceFromPlayer public float distanceFromPlayer Field Value float operand public FsmOperands operand Field Value FsmOperands"
  },
  "api/FSM.Nodes.States.StatesData.FleeData.html": {
    "href": "api/FSM.Nodes.States.StatesData.FleeData.html",
    "title": "Class FleeData | FSM Unity Framework",
    "keywords": "Class FleeData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class FleeData : StateScriptData Inheritance object StateScriptData FleeData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors FleeData() public FleeData() Fields detectionRange public float detectionRange Field Value float fleeDistance public float fleeDistance Field Value float fleeSpeed public float fleeSpeed Field Value float"
  },
  "api/FSM.Nodes.States.StatesData.HealthData.html": {
    "href": "api/FSM.Nodes.States.StatesData.HealthData.html",
    "title": "Class HealthData | FSM Unity Framework",
    "keywords": "Class HealthData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class HealthData : StateScriptData Inheritance object StateScriptData HealthData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors HealthData() public HealthData() Fields health public float health Field Value float operand public FsmOperands operand Field Value FsmOperands"
  },
  "api/FSM.Nodes.States.StatesData.HearingData.html": {
    "href": "api/FSM.Nodes.States.StatesData.HearingData.html",
    "title": "Class HearingData | FSM Unity Framework",
    "keywords": "Class HearingData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class HearingData : StateScriptData Inheritance object StateScriptData HearingData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors HearingData() public HearingData() Fields hearingRange public float hearingRange Field Value float minPlayerSpeed public float minPlayerSpeed Field Value float"
  },
  "api/FSM.Nodes.States.StatesData.IdleData.html": {
    "href": "api/FSM.Nodes.States.StatesData.IdleData.html",
    "title": "Class IdleData | FSM Unity Framework",
    "keywords": "Class IdleData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class IdleData : StateScriptData Inheritance object StateScriptData IdleData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors IdleData() public IdleData()"
  },
  "api/FSM.Nodes.States.StatesData.NextStateData.html": {
    "href": "api/FSM.Nodes.States.StatesData.NextStateData.html",
    "title": "Class NextStateData | FSM Unity Framework",
    "keywords": "Class NextStateData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class NextStateData : StateScriptData Inheritance object StateScriptData NextStateData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors NextStateData() public NextStateData()"
  },
  "api/FSM.Nodes.States.StatesData.PatrolData.html": {
    "href": "api/FSM.Nodes.States.StatesData.PatrolData.html",
    "title": "Class PatrolData | FSM Unity Framework",
    "keywords": "Class PatrolData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class PatrolData : StateScriptData Inheritance object StateScriptData PatrolData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors PatrolData() public PatrolData() Fields patrolPoints public List<string> patrolPoints Field Value List<string>"
  },
  "api/FSM.Nodes.States.StatesData.SearchData.html": {
    "href": "api/FSM.Nodes.States.StatesData.SearchData.html",
    "title": "Class SearchData | FSM Unity Framework",
    "keywords": "Class SearchData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class SearchData : StateScriptData Inheritance object StateScriptData SearchData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors SearchData() public SearchData() Fields exploreRadius public float exploreRadius Field Value float"
  },
  "api/FSM.Nodes.States.StatesData.SeeingData.html": {
    "href": "api/FSM.Nodes.States.StatesData.SeeingData.html",
    "title": "Class SeeingData | FSM Unity Framework",
    "keywords": "Class SeeingData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class SeeingData : StateScriptData Inheritance object StateScriptData SeeingData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors SeeingData() public SeeingData() Fields distance public float distance Field Value float"
  },
  "api/FSM.Nodes.States.StatesData.VariableData.html": {
    "href": "api/FSM.Nodes.States.StatesData.VariableData.html",
    "title": "Class VariableData | FSM Unity Framework",
    "keywords": "Class VariableData Namespace FSM.Nodes.States.StatesData Assembly FSM.dll public class VariableData : StateScriptData Inheritance object StateScriptData VariableData Inherited Members StateScriptData.InspectVariables() StateScriptData.GetVariables() StateScriptData.SetVariableValue(string, object) StateScriptData.RemoveVariable(string, object) StateScriptData.SetStateName(string) StateScriptData.GetStateName() Constructors VariableData() public VariableData() Fields selectedVariable public string selectedVariable Field Value string value public string value Field Value string"
  },
  "api/FSM.Nodes.States.StatesData.html": {
    "href": "api/FSM.Nodes.States.StatesData.html",
    "title": "Namespace FSM.Nodes.States.StatesData | FSM Unity Framework",
    "keywords": "Namespace FSM.Nodes.States.StatesData Classes AttackData ChaseData CustomConditionData CustomData DistanceData FleeData HealthData HearingData IdleData NextStateData PatrolData SearchData SeeingData VariableData"
  },
  "api/FSM.Nodes.States.html": {
    "href": "api/FSM.Nodes.States.html",
    "title": "Namespace FSM.Nodes.States | FSM Unity Framework",
    "keywords": "Namespace FSM.Nodes.States Classes StateScript Abstract base class for state scripts. StateScriptData Data class for storing state script variables and metadata. Interfaces IAction Interface for defining actions. ICondition Interface for defining conditions."
  },
  "api/FSM.Nodes.html": {
    "href": "api/FSM.Nodes.html",
    "title": "Namespace FSM.Nodes | FSM Unity Framework",
    "keywords": "Namespace FSM.Nodes Classes FsmGraph Represents the finite state machine graph attached to a GameObject."
  },
  "api/FSM.Player.HealthBar.html": {
    "href": "api/FSM.Player.HealthBar.html",
    "title": "Class HealthBar | FSM Unity Framework",
    "keywords": "Class HealthBar Namespace FSM.Player Assembly FSM.dll Manages the health bar UI component. public class HealthBar : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour HealthBar Methods UpdateHealthBar(float, float) Updates the health bar UI based on the current health and maximum health. public void UpdateHealthBar(float maxHealth, float currentHealth) Parameters maxHealth float Maximum health value. currentHealth float Current health value."
  },
  "api/FSM.Player.HealthSystem.html": {
    "href": "api/FSM.Player.HealthSystem.html",
    "title": "Class HealthSystem | FSM Unity Framework",
    "keywords": "Class HealthSystem Namespace FSM.Player Assembly FSM.dll Manages the health system of a player character. public class HealthSystem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour HealthSystem Fields maxHealth public float maxHealth Field Value float respawnSystem public RespawnSystem respawnSystem Field Value RespawnSystem Methods GetCurrentHealth() Returns the current health value. public float GetCurrentHealth() Returns float GetMaxHealth() Returns the maximum health value. public float GetMaxHealth() Returns float Heal() Heals the player to full health. public void Heal() TakeDamage(float) Inflicts damage to the player. public void TakeDamage(float amount) Parameters amount float Amount of damage to inflict."
  },
  "api/FSM.Player.MouseLook.html": {
    "href": "api/FSM.Player.MouseLook.html",
    "title": "Class MouseLook | FSM Unity Framework",
    "keywords": "Class MouseLook Namespace FSM.Player Assembly FSM.dll Controls the player's mouse look behavior. public class MouseLook : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MouseLook"
  },
  "api/FSM.Player.PlayerMovement.html": {
    "href": "api/FSM.Player.PlayerMovement.html",
    "title": "Class PlayerMovement | FSM Unity Framework",
    "keywords": "Class PlayerMovement Namespace FSM.Player Assembly FSM.dll Controls the movement of the player character. public class PlayerMovement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerMovement Fields speed public float speed Field Value float"
  },
  "api/FSM.Player.RespawnSystem.html": {
    "href": "api/FSM.Player.RespawnSystem.html",
    "title": "Class RespawnSystem | FSM Unity Framework",
    "keywords": "Class RespawnSystem Namespace FSM.Player Assembly FSM.dll public class RespawnSystem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour RespawnSystem Fields deathScreen public GameObject deathScreen Field Value GameObject player public GameObject player Field Value GameObject Methods ShowDeathScreen() public void ShowDeathScreen()"
  },
  "api/FSM.Player.html": {
    "href": "api/FSM.Player.html",
    "title": "Namespace FSM.Player | FSM Unity Framework",
    "keywords": "Namespace FSM.Player Classes HealthBar Manages the health bar UI component. HealthSystem Manages the health system of a player character. MouseLook Controls the player's mouse look behavior. PlayerMovement Controls the movement of the player character. RespawnSystem"
  },
  "api/FSM.Utilities.CustomObjectField.html": {
    "href": "api/FSM.Utilities.CustomObjectField.html",
    "title": "Class CustomObjectField | FSM Unity Framework",
    "keywords": "Class CustomObjectField Namespace FSM.Utilities Assembly FSM.dll Custom ObjectField class to display object thumbnails. public class CustomObjectField : ObjectField Inheritance object CallbackEventHandler Focusable VisualElement BindableElement BaseField<Object> ObjectField CustomObjectField Extension Methods FsmStyleUtility.AddClasses(VisualElement, params string[]) FsmStyleUtility.AddStyleSheets(VisualElement, params string[]) Constructors CustomObjectField(string) Constructor to initialize the custom object field. public CustomObjectField(string label) Parameters label string Label for the object field."
  },
  "api/FSM.Utilities.FsmTagLayerSetUp.html": {
    "href": "api/FSM.Utilities.FsmTagLayerSetUp.html",
    "title": "Class FsmTagLayerSetUp | FSM Unity Framework",
    "keywords": "Class FsmTagLayerSetUp Namespace FSM.Utilities Assembly FSM.dll [InitializeOnLoad] public class FsmTagLayerSetUp Inheritance object FsmTagLayerSetUp"
  },
  "api/FSM.Utilities.HierarchyChecker.html": {
    "href": "api/FSM.Utilities.HierarchyChecker.html",
    "title": "Class HierarchyChecker | FSM Unity Framework",
    "keywords": "Class HierarchyChecker Namespace FSM.Utilities Assembly FSM.dll Class for loading unique ID's to every object everytime the hierarchy changes. [InitializeOnLoad] public static class HierarchyChecker Inheritance object HierarchyChecker"
  },
  "api/FSM.Utilities.IDGenerator.html": {
    "href": "api/FSM.Utilities.IDGenerator.html",
    "title": "Class IDGenerator | FSM Unity Framework",
    "keywords": "Class IDGenerator Namespace FSM.Utilities Assembly FSM.dll Class for generating unique IDs for GameObjects. public class IDGenerator : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour IDGenerator Fields uniqueID public string uniqueID Field Value string Methods GenerateNewID() Call this method to generate a new unique ID. public string GenerateNewID() Returns string GetUniqueID() Call this method to get the unique ID. If the unique ID is not generated yet, it will generate it. Else, it will return the existing unique ID. public string GetUniqueID() Returns string The generated unique ID."
  },
  "api/FSM.Utilities.SerializableDictionary-2.SerializableKeyValuePair.html": {
    "href": "api/FSM.Utilities.SerializableDictionary-2.SerializableKeyValuePair.html",
    "title": "Struct SerializableDictionary<TKey, TValue>.SerializableKeyValuePair | FSM Unity Framework",
    "keywords": "Struct SerializableDictionary<TKey, TValue>.SerializableKeyValuePair Namespace FSM.Utilities Assembly FSM.dll [Serializable] public struct SerializableDictionary<TKey, TValue>.SerializableKeyValuePair Constructors SerializableKeyValuePair(TKey, TValue) public SerializableKeyValuePair(TKey key, TValue value) Parameters key TKey value TValue Fields Key public TKey Key Field Value TKey Value public TValue Value Field Value TValue Methods SetValue(TValue) public void SetValue(TValue value) Parameters value TValue"
  },
  "api/FSM.Utilities.SerializableDictionary-2.html": {
    "href": "api/FSM.Utilities.SerializableDictionary-2.html",
    "title": "Class SerializableDictionary<TKey, TValue> | FSM Unity Framework",
    "keywords": "Class SerializableDictionary<TKey, TValue> Namespace FSM.Utilities Assembly FSM.dll Serializable dictionary implementation using a list of key-value pairs. [Serializable] public class SerializableDictionary<TKey, TValue> : SerializableDictionary Type Parameters TKey Type of the keys. TValue Type of the values. Inheritance object SerializableDictionary SerializableDictionary<TKey, TValue> Constructors SerializableDictionary() Constructor for SerializableDictionary. public SerializableDictionary() SerializableDictionary(IDictionary<TKey, TValue>) Constructor for SerializableDictionary with initial dictionary. public SerializableDictionary(IDictionary<TKey, TValue> dictionary) Parameters dictionary IDictionary<TKey, TValue> Initial dictionary to populate. Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[TKey] public TValue this[TKey key] { get; set; } Parameters key TKey Property Value TValue Keys public ICollection<TKey> Keys { get; } Property Value ICollection<TKey> Values public ICollection<TValue> Values { get; } Property Value ICollection<TValue> Methods Add(KeyValuePair<TKey, TValue>) public void Add(KeyValuePair<TKey, TValue> kvp) Parameters kvp KeyValuePair<TKey, TValue> Add(TKey, TValue) public void Add(TKey key, TValue value) Parameters key TKey value TValue Clear() public void Clear() Contains(KeyValuePair<TKey, TValue>) public bool Contains(KeyValuePair<TKey, TValue> kvp) Parameters kvp KeyValuePair<TKey, TValue> Returns bool ContainsKey(TKey) public bool ContainsKey(TKey key) Parameters key TKey Returns bool CopyTo(KeyValuePair<TKey, TValue>[], int) public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex) Parameters array KeyValuePair<TKey, TValue>[] arrayIndex int GetEnumerator() public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() Returns IEnumerator<KeyValuePair<TKey, TValue>> GetValue(TKey) public TValue GetValue(TKey key) Parameters key TKey Returns TValue OnAfterDeserialize() Implement this method to receive a callback after Unity deserializes your object. public void OnAfterDeserialize() OnBeforeSerialize() Implement this method to receive a callback before Unity serializes your object. public void OnBeforeSerialize() Remove(KeyValuePair<TKey, TValue>) public bool Remove(KeyValuePair<TKey, TValue> kvp) Parameters kvp KeyValuePair<TKey, TValue> Returns bool Remove(TKey) public bool Remove(TKey key) Parameters key TKey Returns bool TryGetValue(TKey, out TValue) public bool TryGetValue(TKey key, out TValue value) Parameters key TKey value TValue Returns bool UpdateKey(TKey, TKey) public void UpdateKey(TKey oldKey, TKey newKey) Parameters oldKey TKey newKey TKey"
  },
  "api/FSM.Utilities.SerializableDictionary.html": {
    "href": "api/FSM.Utilities.SerializableDictionary.html",
    "title": "Class SerializableDictionary | FSM Unity Framework",
    "keywords": "Class SerializableDictionary Namespace FSM.Utilities Assembly FSM.dll Base class for serializable dictionaries. public class SerializableDictionary Inheritance object SerializableDictionary Derived SerializableDictionary<TKey, TValue>"
  },
  "api/FSM.Utilities.html": {
    "href": "api/FSM.Utilities.html",
    "title": "Namespace FSM.Utilities | FSM Unity Framework",
    "keywords": "Namespace FSM.Utilities Classes CustomObjectField Custom ObjectField class to display object thumbnails. FsmTagLayerSetUp HierarchyChecker Class for loading unique ID's to every object everytime the hierarchy changes. IDGenerator Class for generating unique IDs for GameObjects. SerializableDictionary Base class for serializable dictionaries. SerializableDictionary<TKey, TValue> Serializable dictionary implementation using a list of key-value pairs. Structs SerializableDictionary<TKey, TValue>.SerializableKeyValuePair"
  },
  "examples.html": {
    "href": "examples.html",
    "title": "FSM Unity Framework Tutorial | FSM Unity Framework",
    "keywords": "FSM Unity Framework Tutorial Introduction Welcome to the FSM Unity Framework Tutorial! In this tutorial, we will walk you through the process of using the FSM Unity Framework to create and manage finite state machines in your Unity projects. Video Tutorial Click on the image above to watch the video tutorial."
  },
  "index.html": {
    "href": "index.html",
    "title": "FSM Unity Framework Documentation | FSM Unity Framework",
    "keywords": "FSM Unity Framework Documentation Welcome to the FSM Unity Framework documentation. This framework provides tools for creating Finite State Machines (FSMs) in Unity. Installation The Installation section will guide you through the process of setting up and using the FSM Unity Framework in your Unity projects. Installation Guide Usage The Usage section contains the information for you to be able to use the framework to its maximum potencial. Usage API Reference The API Reference contains detailed documentation for all the classes, methods, and components available in the FSM Unity Framework. API Reference Features & Examples Explore these examples to gain a deeper understanding of how to implement state-based behaviors using the FSM Unity Framework. We provide you with some examples of multiple situations that you may encountar while working with this tool, so you will be able how to handle them properly. Examples Additional Resources GitHub Repository: Visit our GitHub repository for the latest updates, issues, and contributions. FAQ: Check out the frequently asked questions for answers to common queries. Support: Need help or have questions? Contact our support team."
  },
  "installation.html": {
    "href": "installation.html",
    "title": "Getting Started with FSM Unity Framework | FSM Unity Framework",
    "keywords": "Getting Started with FSM Unity Framework Welcome to the FSM Unity Framework! This framework is designed to help developers implement finite state machines in their Unity projects efficiently. With a user-friendly interface and powerful features, you can easily manage complex game states and transitions. Installation Process To install the FSM Unity Framework, follow these steps: Download the Package: Visit the GitHub Repository to find the latest release of the package. Download the file called FsmUnityFramework.unitypackage. Import the Package: Open your Unity project. Double-click the downloaded FsmUnityFramework.unitypackage file. In your Unity project, a new package will appear with all the folders inside. Select all the components you want to import. Install URP (Optional): Universal Render Pipeline (URP) is a Unity library that provides a scalable and highly efficient rendering pipeline. In this project, URP has been exclusively used to enhance the visual quality of the test scene with materials that require this rendering pipeline. If your project does not have URP configured or if you want to use the test scene along with the materials and characters, follow these steps: Open the Unity Editor. Go to Window -> Package Manager. Select the \"Unity Registry\" tab. Search for \"Universal RP\" or \"Universal Render Pipeline\". Click on the package and then click the \"Install\" button at the bottom right. Once installed, configure URP in your project by going to Edit -> Project Settings -> Graphics and dragging the _URP asset imported from the tool package into the \"Scriptable Render Pipeline Settings\" section. Install AI Navigation: AI Navigation is an essential library for enemy navigation and behavior within the game. Follow the installation process provided below: Step 1: Create or Open a Unity Project. Step 2: Install the AI Navigation Package. Open the Unity Editor. Go to Window -> Package Manager. Select the \"Unity Registry\" tab. Search for \"AI Navigation\" or \"AI Pathfinding\". Click on the package and then click the \"Install\" button at the bottom right. Install ProBuild: ProBuild is a library used for level construction and management in your game. Follow the installation process provided below: Step 1: Create or Open a Unity Project. Step 2: Install the ProBuild Package. Open the Unity Editor. Go to Window -> Package Manager. Select the \"Unity Registry\" tab. Search for \"ProBuild\" or \"Level Management\". Click on the package and then click the \"Install\" button at the bottom right. Once you have completed these steps, the FSM Unity Framework will be successfully imported into your Unity project, and you can start using it to create and manage finite state machines!"
  },
  "usage.html": {
    "href": "usage.html",
    "title": "User Guide | FSM Unity Framework",
    "keywords": "User Guide Introduction Welcome to the Unity Finite State Machine (FSM) Tool usage guide. This document provides detailed information on the various types of nodes available in the FSM tool and outlines the features of the tool to help you get started with creating and managing FSMs in your Unity projects. Types of Nodes The FSM tool includes several types of nodes, each serving a specific purpose within the state machine. Understanding these nodes is crucial for effectively using the tool. FsmStateNode Description: The FsmStateNode represents a state within the FSM. It initializes the node with a name and position and sets the type of node as a state. Features: Predefined States: Includes states such as Idle, Patrol, Chase, Flee, Attack, and Search. Custom Variables: Displays variables specific to the state for customization. Animation Override: Allows overriding an animation to run while the state is active. Hit State Override: Modifies global enemy values during this state. Unique Instance: Only one instance of a state behavior can exist simultaneously. Connections: Can receive multiple connections from non-action nodes and can only connect to condition nodes. FsmCustomStateNode Description: The FsmCustomStateNode allows for custom behavior by attaching any scene component and selecting its functions to execute during the state. Features: Component Selection: Add any component from the scene and choose a function to execute. Animation and Hit State Override: Similar to FsmStateNode. Unique Instance: Only one instance of a state behavior can exist simultaneously. Connections: Can receive multiple connections from non-action nodes and can only connect to condition nodes. FsmVariableNode Description: The FsmVariableNode is used to override the value of a variable when connected to another state. Features: Variable Override: Change the value of a variable for connected states. Connections: Can only connect to other states. FsmTransitionNode Description: The FsmTransitionNode manages transitions between states based on specified conditions. Features: Conditions: Includes conditions based on distance, direct vision, health, noise, and a default forward execution condition. Connections: Can connect to both states and conditions. Repeatable: Can be used multiple times with different values. FsmDualTransitionNode Description: The FsmDualTransitionNode is similar to FsmTransitionNode but has two output ports for true and false conditions. Features: Dual Conditions: Allows different behaviors based on whether the condition is true or false. Connections: Can connect to both states and conditions. Repeatable: Can be used multiple times with different values. FsmCustomTransitionNode Description: The FsmCustomTransitionNode allows for custom transitions by selecting functions from scene components to execute during the transition. Features: Component Selection: Add any component from the scene and choose a function to execute. Custom Conditions: Similar to FsmDualTransitionNode but with custom component functions. FsmInitialNode Description: The FsmInitialNode marks the starting point of the FSM. Features: Initial State: Defines the initial state when the FSM is initialized. Unique Instance: Only one initial node can exist in each FSM graph. Automatic Creation: Created automatically and cannot be deleted. FsmExtensionNode Description: The FsmExtensionNode is used for organizing the graph visually. Features: Visual Organization: Helps in arranging the graph and its connections for better clarity. Creation: Created by clicking the middle mouse button on a connection line. Features of the Unity FSM Tool The Unity FSM Tool provides several features designed to streamline the creation and management of finite state machines within Unity. Visual Editor Description: The visual editor offers a user-friendly interface for designing FSMs. It allows users to create, connect, and configure nodes using a drag-and-drop system. Features: Node Creation: Easily create and place nodes on the canvas. Connections: Draw connections between nodes to define transitions. Configuration: Configure node properties and conditions directly within the editor. Serialization and Deserialization Description: The tool supports saving and loading FSM configurations, allowing for persistent FSMs across sessions. Features: Save FSM: Save the current FSM configuration to a file. Load FSM: Load an FSM configuration from a file. Inspector Integration Description: The tool integrates with the Unity Inspector, allowing for seamless editing of FSM properties. Features: Property Fields: Edit FSM properties directly in the Inspector. Live Updates: See real-time updates to FSM configurations within the Inspector. Debugging Tools Description: Debugging tools help identify and fix issues within the FSM. Features: State Tracking: Monitor the current state and transitions during runtime. Condition Evaluation: Evaluate and display condition results to ensure they work as expected. Scripting API Description: The FSM tool provides a scripting API for advanced users who prefer to configure FSMs programmatically. Features: Create States and Transitions: Programmatically create and connect states and transitions. Access FSM Properties: Access and modify FSM properties through code."
  }
}