### YamlMime:ManagedReference
items:
- uid: FSM.Player.HealthSystem
  commentId: T:FSM.Player.HealthSystem
  id: HealthSystem
  parent: FSM.Player
  children:
  - FSM.Player.HealthSystem.GetCurrentHealth
  - FSM.Player.HealthSystem.GetMaxHealth
  - FSM.Player.HealthSystem.Heal
  - FSM.Player.HealthSystem.TakeDamage(System.Single)
  - FSM.Player.HealthSystem.maxHealth
  - FSM.Player.HealthSystem.respawnSystem
  langs:
  - csharp
  - vb
  name: HealthSystem
  nameWithType: HealthSystem
  fullName: FSM.Player.HealthSystem
  type: Class
  source:
    remote:
      path: Assets/FSM/Player/HealthSystem.cs
      branch: main
      repo: https://github.com/acarbonellb33/Unity_FSM_ToolKit.git
    id: HealthSystem
    path: ../Unity_FSM_ToolKit/Assets/FSM/Player/HealthSystem.cs
    startLine: 6
  assemblies:
  - FSM
  namespace: FSM.Player
  summary: Manages the health system of a player character.
  example: []
  syntax:
    content: 'public class HealthSystem : MonoBehaviour'
    content.vb: Public Class HealthSystem Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
- uid: FSM.Player.HealthSystem.maxHealth
  commentId: F:FSM.Player.HealthSystem.maxHealth
  id: maxHealth
  parent: FSM.Player.HealthSystem
  langs:
  - csharp
  - vb
  name: maxHealth
  nameWithType: HealthSystem.maxHealth
  fullName: FSM.Player.HealthSystem.maxHealth
  type: Field
  source:
    remote:
      path: Assets/FSM/Player/HealthSystem.cs
      branch: main
      repo: https://github.com/acarbonellb33/Unity_FSM_ToolKit.git
    id: maxHealth
    path: ../Unity_FSM_ToolKit/Assets/FSM/Player/HealthSystem.cs
    startLine: 8
  assemblies:
  - FSM
  namespace: FSM.Player
  syntax:
    content: public float maxHealth
    return:
      type: System.Single
    content.vb: Public maxHealth As Single
- uid: FSM.Player.HealthSystem.respawnSystem
  commentId: F:FSM.Player.HealthSystem.respawnSystem
  id: respawnSystem
  parent: FSM.Player.HealthSystem
  langs:
  - csharp
  - vb
  name: respawnSystem
  nameWithType: HealthSystem.respawnSystem
  fullName: FSM.Player.HealthSystem.respawnSystem
  type: Field
  source:
    remote:
      path: Assets/FSM/Player/HealthSystem.cs
      branch: main
      repo: https://github.com/acarbonellb33/Unity_FSM_ToolKit.git
    id: respawnSystem
    path: ../Unity_FSM_ToolKit/Assets/FSM/Player/HealthSystem.cs
    startLine: 9
  assemblies:
  - FSM
  namespace: FSM.Player
  syntax:
    content: public RespawnSystem respawnSystem
    return:
      type: FSM.Player.RespawnSystem
    content.vb: Public respawnSystem As RespawnSystem
- uid: FSM.Player.HealthSystem.TakeDamage(System.Single)
  commentId: M:FSM.Player.HealthSystem.TakeDamage(System.Single)
  id: TakeDamage(System.Single)
  parent: FSM.Player.HealthSystem
  langs:
  - csharp
  - vb
  name: TakeDamage(float)
  nameWithType: HealthSystem.TakeDamage(float)
  fullName: FSM.Player.HealthSystem.TakeDamage(float)
  type: Method
  source:
    remote:
      path: Assets/FSM/Player/HealthSystem.cs
      branch: main
      repo: https://github.com/acarbonellb33/Unity_FSM_ToolKit.git
    id: TakeDamage
    path: ../Unity_FSM_ToolKit/Assets/FSM/Player/HealthSystem.cs
    startLine: 23
  assemblies:
  - FSM
  namespace: FSM.Player
  summary: Inflicts damage to the player.
  example: []
  syntax:
    content: public void TakeDamage(float amount)
    parameters:
    - id: amount
      type: System.Single
      description: Amount of damage to inflict.
    content.vb: Public Sub TakeDamage(amount As Single)
  overload: FSM.Player.HealthSystem.TakeDamage*
  nameWithType.vb: HealthSystem.TakeDamage(Single)
  fullName.vb: FSM.Player.HealthSystem.TakeDamage(Single)
  name.vb: TakeDamage(Single)
- uid: FSM.Player.HealthSystem.Heal
  commentId: M:FSM.Player.HealthSystem.Heal
  id: Heal
  parent: FSM.Player.HealthSystem
  langs:
  - csharp
  - vb
  name: Heal()
  nameWithType: HealthSystem.Heal()
  fullName: FSM.Player.HealthSystem.Heal()
  type: Method
  source:
    remote:
      path: Assets/FSM/Player/HealthSystem.cs
      branch: main
      repo: https://github.com/acarbonellb33/Unity_FSM_ToolKit.git
    id: Heal
    path: ../Unity_FSM_ToolKit/Assets/FSM/Player/HealthSystem.cs
    startLine: 32
  assemblies:
  - FSM
  namespace: FSM.Player
  summary: Heals the player to full health.
  example: []
  syntax:
    content: public void Heal()
    content.vb: Public Sub Heal()
  overload: FSM.Player.HealthSystem.Heal*
- uid: FSM.Player.HealthSystem.GetMaxHealth
  commentId: M:FSM.Player.HealthSystem.GetMaxHealth
  id: GetMaxHealth
  parent: FSM.Player.HealthSystem
  langs:
  - csharp
  - vb
  name: GetMaxHealth()
  nameWithType: HealthSystem.GetMaxHealth()
  fullName: FSM.Player.HealthSystem.GetMaxHealth()
  type: Method
  source:
    remote:
      path: Assets/FSM/Player/HealthSystem.cs
      branch: main
      repo: https://github.com/acarbonellb33/Unity_FSM_ToolKit.git
    id: GetMaxHealth
    path: ../Unity_FSM_ToolKit/Assets/FSM/Player/HealthSystem.cs
    startLine: 49
  assemblies:
  - FSM
  namespace: FSM.Player
  summary: Returns the maximum health value.
  example: []
  syntax:
    content: public float GetMaxHealth()
    return:
      type: System.Single
    content.vb: Public Function GetMaxHealth() As Single
  overload: FSM.Player.HealthSystem.GetMaxHealth*
- uid: FSM.Player.HealthSystem.GetCurrentHealth
  commentId: M:FSM.Player.HealthSystem.GetCurrentHealth
  id: GetCurrentHealth
  parent: FSM.Player.HealthSystem
  langs:
  - csharp
  - vb
  name: GetCurrentHealth()
  nameWithType: HealthSystem.GetCurrentHealth()
  fullName: FSM.Player.HealthSystem.GetCurrentHealth()
  type: Method
  source:
    remote:
      path: Assets/FSM/Player/HealthSystem.cs
      branch: main
      repo: https://github.com/acarbonellb33/Unity_FSM_ToolKit.git
    id: GetCurrentHealth
    path: ../Unity_FSM_ToolKit/Assets/FSM/Player/HealthSystem.cs
    startLine: 56
  assemblies:
  - FSM
  namespace: FSM.Player
  summary: Returns the current health value.
  example: []
  syntax:
    content: public float GetCurrentHealth()
    return:
      type: System.Single
    content.vb: Public Function GetCurrentHealth() As Single
  overload: FSM.Player.HealthSystem.GetCurrentHealth*
references:
- uid: FSM.Player
  commentId: N:FSM.Player
  href: FSM.html
  name: FSM.Player
  nameWithType: FSM.Player
  fullName: FSM.Player
  spec.csharp:
  - uid: FSM
    name: FSM
    href: FSM.html
  - name: .
  - uid: FSM.Player
    name: Player
    href: FSM.Player.html
  spec.vb:
  - uid: FSM
    name: FSM
    href: FSM.html
  - name: .
  - uid: FSM.Player
    name: Player
    href: FSM.Player.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: FSM.Player.RespawnSystem
  commentId: T:FSM.Player.RespawnSystem
  parent: FSM.Player
  href: FSM.Player.RespawnSystem.html
  name: RespawnSystem
  nameWithType: RespawnSystem
  fullName: FSM.Player.RespawnSystem
- uid: FSM.Player.HealthSystem.TakeDamage*
  commentId: Overload:FSM.Player.HealthSystem.TakeDamage
  href: FSM.Player.HealthSystem.html#FSM_Player_HealthSystem_TakeDamage_System_Single_
  name: TakeDamage
  nameWithType: HealthSystem.TakeDamage
  fullName: FSM.Player.HealthSystem.TakeDamage
- uid: FSM.Player.HealthSystem.Heal*
  commentId: Overload:FSM.Player.HealthSystem.Heal
  href: FSM.Player.HealthSystem.html#FSM_Player_HealthSystem_Heal
  name: Heal
  nameWithType: HealthSystem.Heal
  fullName: FSM.Player.HealthSystem.Heal
- uid: FSM.Player.HealthSystem.GetMaxHealth*
  commentId: Overload:FSM.Player.HealthSystem.GetMaxHealth
  href: FSM.Player.HealthSystem.html#FSM_Player_HealthSystem_GetMaxHealth
  name: GetMaxHealth
  nameWithType: HealthSystem.GetMaxHealth
  fullName: FSM.Player.HealthSystem.GetMaxHealth
- uid: FSM.Player.HealthSystem.GetCurrentHealth*
  commentId: Overload:FSM.Player.HealthSystem.GetCurrentHealth
  href: FSM.Player.HealthSystem.html#FSM_Player_HealthSystem_GetCurrentHealth
  name: GetCurrentHealth
  nameWithType: HealthSystem.GetCurrentHealth
  fullName: FSM.Player.HealthSystem.GetCurrentHealth
